{"pageProps":{"plasmicData":{"entryCompMetas":[{"id":"AyJP-TfUPEv","usedComponents":["VM0F3zzIlnj","bBUJjznAyLU","im6OlyArx76"],"projectId":"wouGT5KyY4fTan3PA39SdB","name":"Posts","renderFile":"render__AyJP-TfUPEv.js","skeletonFile":"comp__AyJP-TfUPEv.js","cssFile":"css__AyJP-TfUPEv.css","path":"/posts","isPage":true,"entry":"render__AyJP-TfUPEv.js","isCode":false,"pageMetadata":{"path":"/posts","description":"","title":null}}],"bundle":{"modules":{"browser":[{"fileName":"comp__VM0F3zzIlnj.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar Link = require('next/link');\nvar index = require('./index-cc64b87e.js');\nvar comp__sHD_5zXf77Q = require('./comp__sHD_5zXf77Q-00a0ddb1.js');\nrequire('react-dom');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar Link__default = /*#__PURE__*/_interopDefaultLegacy(Link);\n\nconst _jsxFileName$1 = \"/tmp/tmp-40-8x0qKHKm1t3H/render__VM0F3zzIlnj.tsx\";\n\n  // plasmic-import: _4zgXkGY2Qf/icon\n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicHomeHeader__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n    const PlasmicHomeHeader__ArgProps = new Array(\"title\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicHomeHeader__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_wouGT5KyY4fTan3PA39SdB\", \"HomeHeader__root__qoZax\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 89}}\n    \n    \n\n  , index.createPlasmicElementProxy(index.PlasmicLink, {\n    \n    \n    'data-plasmic-override': overrides.link,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__a\", \"HomeHeader__link__rEkV\"),\ncomponent: Link__default[\"default\"],\nhref: (\"/\" ),\nplatform: \"nextjs\", __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 100}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: \"Plasmic Starter Blog\",\n      value: args.title,\n      className: index.classNames(\"HomeHeader__slotTargetTitle__gMnDw\")\n  }) \n        )\n\n\n  , index.createPlasmicElementProxy(comp__sHD_5zXf77Q.AuthorBio, {\n    \n    \n    'data-plasmic-override': overrides.authorBio,\n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomeHeader__authorBio___9WeZr\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 121}}\n    \n    )\n\n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\", \"link\", \"authorBio\"],\nlink: [\"link\"],\nauthorBio: [\"authorBio\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHomeHeader__ArgProps,\n          internalVariantPropNames: PlasmicHomeHeader__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicHomeHeader__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicHomeHeader\";\n      } else {\n        func.displayName = `PlasmicHomeHeader.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicHomeHeader = Object.assign(\n      // Top-level PlasmicHomeHeader renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicHomeHeader\n        internalVariantProps: PlasmicHomeHeader__VariantProps,\n        internalArgProps: PlasmicHomeHeader__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-40-8x0qKHKm1t3H/comp__VM0F3zzIlnj.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface HomeHeaderProps extends Omit<DefaultHomeHeaderProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultHomeHeaderProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function HomeHeader_(props, ref) {\n        \n    // Use PlasmicHomeHeader to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicHomeHeader are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all HomeHeaderProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicHomeHeader, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const HomeHeader = React__namespace.forwardRef(HomeHeader_);\n\nexports[\"default\"] = HomeHeader;\n","imports":["react","next/link","index-cc64b87e.js","comp__sHD_5zXf77Q-00a0ddb1.js","react-dom","css__VM0F3zzIlnj.css"],"type":"code"},{"fileName":"comp__bBUJjznAyLU.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar Link = require('next/link');\nvar index = require('./index-cc64b87e.js');\nrequire('react-dom');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar Link__default = /*#__PURE__*/_interopDefaultLegacy(Link);\n\nconst _jsxFileName$1 = \"/tmp/tmp-40-8x0qKHKm1t3H/render__bBUJjznAyLU.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicListItem__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n\n    const PlasmicListItem__ArgProps = new Array(\"title\",\"description\",\"date\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicListItem__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy(index.Stack, {\n    as: index.PlasmicLink,\n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    hasGap: true,\n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__a\", \"root_reset_wouGT5KyY4fTan3PA39SdB\", \"ListItem__root__eq36X\"),\ncomponent: Link__default[\"default\"],\nhref: (\"/post\" ),\nplatform: \"nextjs\", __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 91}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: \"Blog Post Title\",\n      value: args.title,\n      className: index.classNames(\"ListItem__slotTargetTitle__jzaFv\")\n  }) \n,  index.renderPlasmicSlot({\n      defaultContents: \"January 1, 2020\",\n      value: args.date,\n      className: index.classNames(\"ListItem__slotTargetDate__zlIA\")\n  }) \n,  index.renderPlasmicSlot({\n      defaultContents: \"Blog description goes here.\",\n      value: args.description,\n      \n  }) \n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicListItem__ArgProps,\n          internalVariantPropNames: PlasmicListItem__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicListItem__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicListItem\";\n      } else {\n        func.displayName = `PlasmicListItem.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicListItem = Object.assign(\n      // Top-level PlasmicListItem renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicListItem\n        internalVariantProps: PlasmicListItem__VariantProps,\n        internalArgProps: PlasmicListItem__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-40-8x0qKHKm1t3H/comp__bBUJjznAyLU.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface ListItemProps extends Omit<DefaultListItemProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultListItemProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function ListItem_(props, ref) {\n        \n    // Use PlasmicListItem to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicListItem are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all ListItemProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicListItem, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const ListItem = React__namespace.forwardRef(ListItem_);\n\nexports[\"default\"] = ListItem;\n","imports":["react","next/link","index-cc64b87e.js","react-dom","css__bBUJjznAyLU.css"],"type":"code"},{"fileName":"comp__im6OlyArx76.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar Link = require('next/link');\nvar index = require('./index-cc64b87e.js');\nrequire('react-dom');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar Link__default = /*#__PURE__*/_interopDefaultLegacy(Link);\n\nconst _jsxFileName$1 = \"/tmp/tmp-40-8x0qKHKm1t3H/render__im6OlyArx76.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicFooter__VariantProps = new Array();\n  \n\n    \n    \n\n    const PlasmicFooter__ArgProps = new Array();\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicFooter__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_wouGT5KyY4fTan3PA39SdB\", \"Footer__root__ak9UN\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 87}}\n    \n    \n\n  , index.createPlasmicElementProxy(index.Stack, {\n    as: \"div\",\n    \n    'data-plasmic-override': overrides.freeBox,\n    \n    \n    hasGap: true,\n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"Footer__freeBox__wrg1J\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 98}}\n    \n    \n\n  , index.createPlasmicElementProxy('div', {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"__wab_text\", \"Footer__text__vuqty\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 109}}\n    \n    \n          ,  \"© 2021\" \n        )\n\n\n  , index.createPlasmicElementProxy('div', {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"__wab_text\", \"Footer__text__xuj1Y\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 123}}\n    \n    \n          ,  \"Built with\" \n        )\n\n\n  , index.createPlasmicElementProxy(index.PlasmicLink, {\n    \n    \n    'data-plasmic-override': overrides.link,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__a\", \"__wab_text\", \"Footer__link___4McH5\"),\ncomponent: Link__default[\"default\"],\nhref: (\"https://www.plasmic.app\" ),\nplatform: \"nextjs\", __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 137}}\n    \n    \n          ,  \"Plasmic\" \n        )\n\n        )\n\n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\", \"freeBox\", \"link\"],\nfreeBox: [\"freeBox\", \"link\"],\nlink: [\"link\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicFooter__ArgProps,\n          internalVariantPropNames: PlasmicFooter__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicFooter__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicFooter\";\n      } else {\n        func.displayName = `PlasmicFooter.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicFooter = Object.assign(\n      // Top-level PlasmicFooter renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicFooter\n        internalVariantProps: PlasmicFooter__VariantProps,\n        internalArgProps: PlasmicFooter__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-40-8x0qKHKm1t3H/comp__im6OlyArx76.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface FooterProps extends Omit<DefaultFooterProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultFooterProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function Footer_(props, ref) {\n        \n    // Use PlasmicFooter to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicFooter are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all FooterProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicFooter, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const Footer = React__namespace.forwardRef(Footer_);\n\nexports[\"default\"] = Footer;\n","imports":["react","next/link","index-cc64b87e.js","react-dom","css__im6OlyArx76.css"],"type":"code"},{"fileName":"comp__sHD_5zXf77Q-00a0ddb1.js","code":"'use strict';\n\nvar React = require('react');\nvar index = require('./index-cc64b87e.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst _jsxFileName$2 = \"/tmp/tmp-40-8x0qKHKm1t3H/icon___4zgXkGY2Qf.tsx\";\n\n    \n\n\n\n    function PlasmicLogoIcon(props) {\n      const {\n        className,\n        style,\n        title,\n        ...restProps\n      } = props;\n      return (\n        React__default[\"default\"].createElement('svg', {\n          xmlns: \"http://www.w3.org/2000/svg\", fill: \"none\", viewBox: \"0 0 36 18\", height: \"1em\", width: \"1em\", className: index.classNames(\"plasmic-default__svg\", className), style: style,\n          ...restProps, __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 21}}\n        \n          , title && React__default[\"default\"].createElement('title', {__self: this, __source: {fileName: _jsxFileName$2, lineNumber: 25}}, title)\n\n\n\n    , React__default[\"default\"].createElement('path', {\n      fill: \"url(#kQdHwLjSFa)\", d: \"M2 18C.895 18-.012 17.101.11 16.003 1.103 7.002 8.734 0 18 0s16.897 7.002 17.89 16.003C36.013 17.101 35.106 18 34 18h-2c0-7.732-6.268-14-14-14S4 10.268 4 18H2z\", clipRule: \"evenodd\", fillRule: \"evenodd\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 29}}\n    \n\n    )\n\n\n\n\n    , React__default[\"default\"].createElement('path', {\n      fill: \"url(#kQdHwLjSFb)\", d: \"M6 18c0-6.627 5.373-12 12-12s12 5.373 12 12h-4a8 8 0 10-16 0H6z\", clipRule: \"evenodd\", fillRule: \"evenodd\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 38}}\n    \n\n    )\n\n\n\n\n    , React__default[\"default\"].createElement('path', {\n      fill: \"url(#kQdHwLjSFc)\", d: \"M12 18a6 6 0 0112 0h-3c-.552 0-.98-.474-1.244-.959a2 2 0 00-3.512 0c-.265.485-.692.959-1.244.959h-3z\", clipRule: \"evenodd\", fillRule: \"evenodd\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 47}}\n    \n\n    )\n\n\n\n\n    , React__default[\"default\"].createElement('defs', {__self: this, __source: {fileName: _jsxFileName$2, lineNumber: 56}}\n      \n    \n\n\n\n    , React__default[\"default\"].createElement('linearGradient', {\n      gradientUnits: \"userSpaceOnUse\", y2: \"18\", x2: \"18\", y1: \"18\", x1: \"1.977\", id: \"kQdHwLjSFa\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 62}}\n    \n\n\n\n    , React__default[\"default\"].createElement('stop', {\n      stopColor: \"#1877F2\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 68}}\n    \n\n    )\n\n\n\n\n    , React__default[\"default\"].createElement('stop', {\n      stopColor: \"#04A4F4\", offset: \"1\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 77}}\n    \n\n    )\n\n\n\n    )\n\n\n\n\n    , React__default[\"default\"].createElement('linearGradient', {\n      gradientUnits: \"userSpaceOnUse\", y2: \"18\", x2: \"18\", y1: \"18\", x1: \"7.968\", id: \"kQdHwLjSFb\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 90}}\n    \n\n\n\n    , React__default[\"default\"].createElement('stop', {\n      stopColor: \"#2ABBA7\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 96}}\n    \n\n    )\n\n\n\n\n    , React__default[\"default\"].createElement('stop', {\n      stopColor: \"#45BD62\", offset: \"1\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 105}}\n    \n\n    )\n\n\n\n    )\n\n\n\n\n    , React__default[\"default\"].createElement('linearGradient', {\n      gradientUnits: \"userSpaceOnUse\", y2: \"18\", x2: \"18\", y1: \"18\", x1: \"13.953\", id: \"kQdHwLjSFc\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 118}}\n    \n\n\n\n    , React__default[\"default\"].createElement('stop', {\n      stopColor: \"#F02849\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 124}}\n    \n\n    )\n\n\n\n\n    , React__default[\"default\"].createElement('stop', {\n      stopColor: \"#F5533D\", offset: \"1\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 133}}\n    \n\n    )\n\n\n\n    )\n\n\n\n    )\n\n\n\n        )\n      );\n    }\n    /* prettier-ignore-end */\n\nconst _jsxFileName$1 = \"/tmp/tmp-40-8x0qKHKm1t3H/render__sHD_5zXf77Q.tsx\";\n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicAuthorBio__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n    const PlasmicAuthorBio__ArgProps = new Array(\"profilepic\",\"description\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicAuthorBio__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy(index.Stack, {\n    as: \"div\",\n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    hasGap: true,\n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_wouGT5KyY4fTan3PA39SdB\", \"AuthorBio__root___3TPys\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 90}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: \n  index.createPlasmicElementProxy(PlasmicLogoIcon, {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__svg\", \"AuthorBio__svg__lRfpD\"),\nrole: \"img\", __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 102}}\n    \n    )\n  ,\n      value: args.profilepic,\n      \n  }) \n\n  , index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.freeBox,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"AuthorBio__freeBox__oqEEe\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 118}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: \"Built with love by the Plasmic team. \",\n      value: args.description,\n      \n  }) \n        )\n\n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\", \"freeBox\"],\nfreeBox: [\"freeBox\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicAuthorBio__ArgProps,\n          internalVariantPropNames: PlasmicAuthorBio__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicAuthorBio__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicAuthorBio\";\n      } else {\n        func.displayName = `PlasmicAuthorBio.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicAuthorBio = Object.assign(\n      // Top-level PlasmicAuthorBio renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicAuthorBio\n        internalVariantProps: PlasmicAuthorBio__VariantProps,\n        internalArgProps: PlasmicAuthorBio__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-40-8x0qKHKm1t3H/comp__sHD_5zXf77Q.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface AuthorBioProps extends Omit<DefaultAuthorBioProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultAuthorBioProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function AuthorBio_(props, ref) {\n        \n    // Use PlasmicAuthorBio to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicAuthorBio are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all AuthorBioProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicAuthorBio, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const AuthorBio = React__namespace.forwardRef(AuthorBio_);\n\nexports.AuthorBio = AuthorBio;\nexports.PlasmicLogoIcon = PlasmicLogoIcon;\n","imports":["react","index-cc64b87e.js"],"type":"code"},{"fileName":"comp__sHD_5zXf77Q.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('react');\nvar comp__sHD_5zXf77Q = require('./comp__sHD_5zXf77Q-00a0ddb1.js');\nrequire('./index-cc64b87e.js');\nrequire('react-dom');\n\n\n\nexports[\"default\"] = comp__sHD_5zXf77Q.AuthorBio;\n","imports":["react","comp__sHD_5zXf77Q-00a0ddb1.js","index-cc64b87e.js","react-dom","css__sHD_5zXf77Q.css"],"type":"code"},{"fileName":"css__AyJP-TfUPEv.css","source":".Posts__root__k1Ij{display:flex;position:relative;flex-direction:column;align-items:center;justify-content:flex-start;width:100%;height:100%;min-width:0;min-height:0}.Posts__freeBox__nCsVk{display:flex;flex-direction:column;width:100%;align-self:center;min-width:0;padding:25px 50px}.Posts__freeBox__nCsVk>.__wab_flex-container{flex-direction:column;align-items:center;justify-content:space-evenly;min-width:0;margin-top:calc(0px - 32px);height:calc(100% + 32px)}.Posts__freeBox__nCsVk>.__wab_flex-container>*,.Posts__freeBox__nCsVk>.__wab_flex-container>.__wab_slot>*,.Posts__freeBox__nCsVk>.__wab_flex-container>picture>img,.Posts__freeBox__nCsVk>.__wab_flex-container>.__wab_slot>picture>img{margin-top:32px}@media (min-width:768px){.Posts__freeBox__nCsVk{width:630px}}.Posts__homeHeader__x8JxI.__wab_instance{position:relative}.Posts__text__agoGd{color:#7559ea}.Posts__text__drCd3{position:relative;width:100%;height:auto;max-width:800px;font-weight:700;color:red;min-width:0}.Posts__container__uAkfJ{display:flex;position:relative;flex-direction:column;width:100%;min-width:0}.Posts__container__uAkfJ>.__wab_flex-container{flex-direction:column;align-items:stretch;justify-content:flex-start;min-width:0;margin-top:calc(0px - 32px);height:calc(100% + 32px)}.Posts__container__uAkfJ>.__wab_flex-container>*,.Posts__container__uAkfJ>.__wab_flex-container>.__wab_slot>*,.Posts__container__uAkfJ>.__wab_flex-container>picture>img,.Posts__container__uAkfJ>.__wab_flex-container>.__wab_slot>picture>img{margin-top:32px}.Posts__listItem__l8I13.__wab_instance{position:relative}.Posts__listItem__v7557.__wab_instance{position:relative}.Posts__listItem__bwW1W.__wab_instance{position:relative}.Posts__footer__sJVp.__wab_instance{position:relative}","type":"asset"},{"fileName":"css__VM0F3zzIlnj.css","source":".HomeHeader__root__qoZax{display:flex;flex-direction:column;align-items:flex-start;justify-content:space-evenly;width:100%;position:relative;min-width:0}.HomeHeader__link__rEkV{display:flex;position:relative;flex-direction:row;align-items:stretch;justify-content:flex-start}.HomeHeader__slotTargetTitle__gMnDw{font-family:\"Montserrat\",sans-serif;font-size:32px;font-weight:900}.HomeHeader__authorBio___9WeZr.__wab_instance{position:relative}.HomeHeader__svg__h6Hrz{position:relative;object-fit:cover;width:64px;height:64px}","type":"asset"},{"fileName":"css__bBUJjznAyLU.css","source":".ListItem__root__eq36X{display:flex;flex-direction:column;position:relative;width:100%;min-width:0}.ListItem__root__eq36X>.__wab_flex-container{flex-direction:column;align-items:flex-start;justify-content:space-evenly;min-width:0;margin-top:calc(0px - 3px);height:calc(100% + 3px)}.ListItem__root__eq36X>.__wab_flex-container>*,.ListItem__root__eq36X>.__wab_flex-container>.__wab_slot>*,.ListItem__root__eq36X>.__wab_flex-container>picture>img,.ListItem__root__eq36X>.__wab_flex-container>.__wab_slot>picture>img{margin-top:3px}.ListItem__slotTargetTitle__jzaFv{font-size:24px;font-weight:900;color:#007acc}.ListItem__slotTargetDate__zlIA{font-size:12px}","type":"asset"},{"fileName":"css__im6OlyArx76.css","source":".Footer__root__ak9UN{display:flex;flex-direction:column;align-items:flex-start;justify-content:space-evenly;width:100%;position:relative;min-width:0}.Footer__freeBox__wrg1J{display:flex;position:relative;flex-direction:row;width:auto;height:auto;padding:10px}.Footer__freeBox__wrg1J>.__wab_flex-container{flex-direction:row;align-items:stretch;justify-content:flex-start;margin-left:calc(0px - 5px);width:calc(100% + 5px)}.Footer__freeBox__wrg1J>.__wab_flex-container>*,.Footer__freeBox__wrg1J>.__wab_flex-container>.__wab_slot>*,.Footer__freeBox__wrg1J>.__wab_flex-container>picture>img,.Footer__freeBox__wrg1J>.__wab_flex-container>.__wab_slot>picture>img{margin-left:5px}.Footer__text__vuqty{position:relative;width:auto;height:auto}.Footer__text__xuj1Y{position:relative;width:auto;height:auto}.Footer__link___4McH5{width:auto;height:auto}","type":"asset"},{"fileName":"css__sHD_5zXf77Q.css","source":".AuthorBio__root___3TPys{display:flex;flex-direction:row;position:relative}.AuthorBio__root___3TPys>.__wab_flex-container{flex-direction:row;align-items:center;justify-content:space-evenly;margin-left:calc(0px - 10px);width:calc(100% + 10px)}.AuthorBio__root___3TPys>.__wab_flex-container>*,.AuthorBio__root___3TPys>.__wab_flex-container>.__wab_slot>*,.AuthorBio__root___3TPys>.__wab_flex-container>picture>img,.AuthorBio__root___3TPys>.__wab_flex-container>.__wab_slot>picture>img{margin-left:10px}.AuthorBio__svg__lRfpD{position:relative;object-fit:cover;width:64px;height:64px;flex-shrink:0}.AuthorBio__freeBox__oqEEe{display:flex;position:relative;width:100%;height:auto;min-width:0}","type":"asset"},{"fileName":"entrypoint.css","source":".__wab_flex-container{display:flex;flex:1;align-self:stretch;pointer-events:none}.__wab_flex-container>*{pointer-events:auto}.__wab_slot{display:contents}.__wab_slot-string-wrapper{position:relative}.__wab_passthrough{display:contents}.__wab_img-wrapper{position:relative;display:inherit;flex-direction:inherit;overflow:hidden;flex-shrink:0}.__wab_slot>.__wab_img-wrapper{display:block}.__wab_passthrough>.__wab_img-wrapper{display:block}.__wab_img-spacer-svg{display:block;margin:0;border:0;padding:0}.__wab_img{position:absolute;top:0;left:0;bottom:0;right:0;margin:0;padding:0;border:0;display:block;width:100%;min-width:100%;max-width:100%;min-height:100%;max-height:100%;box-sizing:border-box}.__wab_picture{display:contents}\n.plasmic_default__all{display:block;white-space:inherit;grid-row:auto;grid-column:auto;position:relative;background:0 0;background-size:100% 100%;background-repeat:no-repeat;box-shadow:none;box-sizing:border-box;text-decoration-line:none;margin:0;border-width:0}.plasmic_default__img{display:inline-block}.plasmic_default__span{display:inline;position:static;font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit}.plasmic_default__input{font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;background-image:linear-gradient(#fff,#fff);padding:2px;border:1px solid #d3d3d3}.plasmic_default__textarea{font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;padding:2px;border:1px solid #d3d3d3}.plasmic_default__button{font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;background-image:none;align-items:flex-start;text-align:center;padding:2px 6px;border:1px solid #d3d3d3}.plasmic_default__code{font-family:inherit;line-height:inherit}.plasmic_default__pre{font-family:inherit;line-height:inherit}.plasmic_default__p{font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit}.plasmic_default__h1{font-size:inherit;font-weight:inherit}.plasmic_default__h2{font-size:inherit;font-weight:inherit}.plasmic_default__h3{font-size:inherit;font-weight:inherit}.plasmic_default__h4{font-size:inherit;font-weight:inherit}.plasmic_default__h5{font-size:inherit;font-weight:inherit}.plasmic_default__h6{font-size:inherit;font-weight:inherit}.plasmic_default__address{font-style:inherit}.plasmic_default__a{color:inherit}.plasmic_default__ol{list-style-type:none;padding:0}.plasmic_default__ul{list-style-type:none;padding:0}.plasmic_default__select{padding:2px 6px}.plasmic_default__li{list-style-type:none}.plasmic_default__component_wrapper{display:grid}.plasmic_default__inline{display:inline}.plasmic_page_wrapper{display:flex;width:100%;min-height:100vh;align-items:stretch;align-self:start}.plasmic_page_wrapper>*{height:auto!important}\n.root_reset_wouGT5KyY4fTan3PA39SdB{font-family:\"Merriweather\",serif;font-size:16px;font-weight:400;font-style:normal;color:#535353;text-align:left;text-transform:none;line-height:1.5;letter-spacing:normal;white-space:pre-wrap}","type":"asset"},{"fileName":"global__9l27Fd1hfaG.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-cc64b87e.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst ScreenContext = React__namespace.createContext(\"PLEASE_RENDER_INSIDE_PROVIDER\" );\n    \n      /**\n       *  @deprecated Plasmic now uses a custom hook for Screen variants, which is\n       *  automatically included in your components. Please remove this provider\n       *  from your code.\n       */\n      function ScreenVariantProvider(props) {\n        console.warn('DEPRECATED: Plasmic now uses a custom hook for Screen variants, which is automatically included in your components. Please remove this provider from your code.');\n        return props.children;\n      }\n    \n    \nconst useScreenVariants = index.createUseScreenVariants(true,{\n  \"desktop\": \"(min-width:768px)\",\n\"mobile\": \"(min-width:0px) and (max-width:768px)\"\n});\n    /* prettier-ignore-end */\n\nexports.ScreenContext = ScreenContext;\nexports.ScreenVariantProvider = ScreenVariantProvider;\nexports[\"default\"] = ScreenContext;\nexports.useScreenVariants = useScreenVariants;\n","imports":["react","index-cc64b87e.js","react-dom"],"type":"code"},{"fileName":"index-cc64b87e.js","code":"'use strict';\n\nvar React = require('react');\nvar _reactDom = require('react-dom');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n\tif (e && e.__esModule) return e;\n\tvar n = Object.create(null);\n\tif (e) {\n\t\tObject.keys(e).forEach(function (k) {\n\t\t\tif (k !== 'default') {\n\t\t\t\tvar d = Object.getOwnPropertyDescriptor(e, k);\n\t\t\t\tObject.defineProperty(n, k, d.get ? d : {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () { return e[k]; }\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\tn[\"default\"] = e;\n\treturn Object.freeze(n);\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar _reactDom__default = /*#__PURE__*/_interopDefaultLegacy(_reactDom);\n\nvar classnames = {exports: {}};\n\n(function (module) {\n/* global define */\n\n(function () {\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n}(classnames));\n\nvar classNames$1 = classnames.exports;\n\nfunction notNil(x) {\r\n    return x != null;\r\n}\r\nfunction pick(obj) {\r\n    var keys = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        keys[_i - 1] = arguments[_i];\r\n    }\r\n    if (Object.keys(obj).length === 0) {\r\n        return obj;\r\n    }\r\n    var res = {};\r\n    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\r\n        var key = keys_1[_a];\r\n        if (key in obj) {\r\n            res[key] = obj[key];\r\n        }\r\n    }\r\n    return res;\r\n}\r\nfunction omit(obj) {\r\n    var keys = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        keys[_i - 1] = arguments[_i];\r\n    }\r\n    if (Object.keys(obj).length === 0) {\r\n        return obj;\r\n    }\r\n    var res = {};\r\n    for (var _a = 0, _b = Object.keys(obj); _a < _b.length; _a++) {\r\n        var key = _b[_a];\r\n        if (!keys.includes(key)) {\r\n            res[key] = obj[key];\r\n        }\r\n    }\r\n    return res;\r\n}\r\nfunction isSubset(a1, a2) {\r\n    return a1.every(function (x) { return a2.includes(x); });\r\n}\r\nfunction chainSingleArgFuncs() {\r\n    var funcs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        funcs[_i] = arguments[_i];\r\n    }\r\n    if (funcs.length === 0) {\r\n        return undefined;\r\n    }\r\n    return function (arg) {\r\n        var res = arg;\r\n        for (var _i = 0, funcs_1 = funcs; _i < funcs_1.length; _i++) {\r\n            var func = funcs_1[_i];\r\n            res = func(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nvar isBrowser = typeof window !== \"undefined\";\r\nvar NONE = Symbol(\"NONE\");\r\nvar useIsomorphicLayoutEffect = isBrowser\r\n    ? React__default[\"default\"].useLayoutEffect\r\n    : React__default[\"default\"].useEffect;\r\nfunction createElementWithChildren(elementType, props, children) {\r\n    if (Array.isArray(children)) {\r\n        return React__default[\"default\"].createElement.apply(React__default[\"default\"], __spreadArray([elementType,\r\n            props], children));\r\n    }\r\n    else if (children || \"children\" in props) {\r\n        // Only call React.createElement with `children` if there are actual children,\r\n        // or if there was an explicit (albeit undefined) children passed via\r\n        // props.  Otherwise, if you pass `undefined` as the children argument\r\n        // to React.createElement, the created element will have prop {children: undefined}.\r\n        // If the `root` is an PlasmicGeneratedComponent, and these props with {children: undefined}\r\n        // are used, then it will be taken as a `children` override, and will thus blank out\r\n        // everything under the root node.\r\n        return React__default[\"default\"].createElement(elementType, props, children);\r\n    }\r\n    else {\r\n        return React__default[\"default\"].createElement(elementType, props);\r\n    }\r\n}\r\nfunction ensureNotArray(children) {\r\n    if (Array.isArray(children)) {\r\n        if (children.length === 1) {\r\n            return children[0];\r\n        }\r\n        else {\r\n            return React__default[\"default\"].createElement.apply(React__default[\"default\"], __spreadArray([React__default[\"default\"].Fragment, {}], children));\r\n        }\r\n    }\r\n    else {\r\n        return children;\r\n    }\r\n}\r\nfunction isReactNode(x) {\r\n    return (typeof x === \"string\" || typeof x === \"number\" || React__default[\"default\"].isValidElement(x));\r\n}\r\nfunction mergeProps(props) {\r\n    var restProps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restProps[_i - 1] = arguments[_i];\r\n    }\r\n    if (restProps.every(function (rest) { return Object.keys(rest).length === 0; })) {\r\n        return props;\r\n    }\r\n    var result = __assign({}, props);\r\n    for (var _a = 0, restProps_1 = restProps; _a < restProps_1.length; _a++) {\r\n        var rest = restProps_1[_a];\r\n        for (var _b = 0, _c = Object.keys(rest); _b < _c.length; _b++) {\r\n            var key = _c[_b];\r\n            result[key] = mergePropVals(key, result[key], rest[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction updateRef(ref, value) {\r\n    if (!ref) {\r\n        return;\r\n    }\r\n    if (typeof ref === \"function\") {\r\n        ref(value);\r\n    }\r\n    else {\r\n        if (!Object.isFrozen(ref)) {\r\n            ref.current = value;\r\n        }\r\n    }\r\n}\r\nfunction mergeRefs() {\r\n    var refs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        refs[_i] = arguments[_i];\r\n    }\r\n    return function (value) {\r\n        for (var _i = 0, refs_1 = refs; _i < refs_1.length; _i++) {\r\n            var ref = refs_1[_i];\r\n            updateRef(ref, value);\r\n        }\r\n    };\r\n}\r\nfunction mergePropVals(name, val1, val2) {\r\n    if (val1 === NONE || val2 === NONE) {\r\n        // The NONE sentinel always skips all merging and returns null\r\n        return null;\r\n    }\r\n    else if (val1 == null) {\r\n        // If either of them is nil, prefer the other\r\n        return val2;\r\n    }\r\n    else if (val2 == null) {\r\n        return val1;\r\n    }\r\n    else if (name === \"className\") {\r\n        // Special case for className -- always combine both class names\r\n        return classNames$1(val1, val2);\r\n    }\r\n    else if (name === \"style\") {\r\n        // Special case for style -- always shallow-merge style dicts\r\n        return __assign(__assign({}, val1), val2);\r\n    }\r\n    else if (name === \"ref\") {\r\n        // Special case for ref\r\n        return mergeRefs(val1, val2);\r\n    }\r\n    else if (typeof val1 !== typeof val2) {\r\n        // If the type of the two values are different, then no way to merge them.\r\n        // Prefer val2.\r\n        return val2;\r\n    }\r\n    else if (name.startsWith(\"on\") && typeof val1 === \"function\") {\r\n        // Special case for event handlers -- always call both handlers\r\n        return function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var res;\r\n            if (typeof val1 === \"function\") {\r\n                res = val1.apply(void 0, args);\r\n            }\r\n            if (typeof val2 === \"function\") {\r\n                res = val2.apply(void 0, args);\r\n            }\r\n            return res;\r\n        };\r\n    }\r\n    else {\r\n        // For all else, prefer val2\r\n        return val2;\r\n    }\r\n}\n\n/**\r\n * Responsive `<img/>` replacement, based on `next/image`\r\n */\r\n// Default image sizes to snap to\r\n// TODO: make this configurable?\r\nvar IMG_SIZES = [16, 32, 48, 64, 96, 128, 256, 384];\r\nvar DEVICE_SIZES = [640, 750, 828, 1080, 1200, 1920, 2048, 3840];\r\nvar ALL_SIZES = __spreadArray(__spreadArray([], IMG_SIZES), DEVICE_SIZES);\r\nReact__default[\"default\"].forwardRef(function PlasmicImg(props, outerRef) {\r\n    var src = props.src, className = props.className, displayWidth = props.displayWidth, displayHeight = props.displayHeight, displayMinWidth = props.displayMinWidth, displayMinHeight = props.displayMinHeight, displayMaxWidth = props.displayMaxWidth, displayMaxHeight = props.displayMaxHeight, quality = props.quality, loader = props.loader, imgRef = props.imgRef, style = props.style, loading = props.loading, rest = __rest(props, [\"src\", \"className\", \"displayWidth\", \"displayHeight\", \"displayMinWidth\", \"displayMinHeight\", \"displayMaxWidth\", \"displayMaxHeight\", \"quality\", \"loader\", \"imgRef\", \"style\", \"loading\"]);\r\n    var imgProps = Object.assign({}, rest, {\r\n        // Default loading to \"lazy\" if not specified (which is different from the\r\n        // html img, which defaults to eager!)\r\n        loading: loading !== null && loading !== void 0 ? loading : \"lazy\",\r\n    });\r\n    var _a = typeof src === \"string\" || !src\r\n        ? { fullWidth: undefined, fullHeight: undefined, aspectRatio: undefined }\r\n        : src, fullWidth = _a.fullWidth, fullHeight = _a.fullHeight, aspectRatio = _a.aspectRatio;\r\n    var srcStr = src ? (typeof src === \"string\" ? src : src.src) : \"\";\r\n    // Assume external image if either dimension is null and use usual <img>\r\n    if (fullHeight == null || fullWidth == null) {\r\n        return (React__default[\"default\"].createElement(\"img\", __assign({ src: srcStr, className: className, style: style }, imgProps, { loading: loading, ref: mergeRefs(imgRef, outerRef) })));\r\n    }\r\n    if (isSvg(srcStr) &&\r\n        (displayHeight == null || displayHeight === \"auto\") &&\r\n        (displayWidth == null || displayWidth === \"auto\")) {\r\n        displayWidth = \"100%\";\r\n    }\r\n    if (fullWidth &&\r\n        fullHeight &&\r\n        (!displayWidth || displayWidth === \"auto\") &&\r\n        !!getPixelLength(displayHeight)) {\r\n        // If there's a pixel length specified for displayHeight but not displayWidth,\r\n        // then we can derive the pixel length for displayWidth.  Having an explicit\r\n        // displayWidth makes this a fixed-size image, which makes it possible for us to\r\n        // generate better markup!\r\n        if (!isSvg(srcStr)) {\r\n            // We shouldn't do it for SVGs though, because `fullWidth` and\r\n            // `fullHeight` might have rounded values so the final\r\n            // `displayWidth` could differ by 1px or so.\r\n            displayWidth = (getPixelLength(displayHeight) * fullWidth) / fullHeight;\r\n        }\r\n    }\r\n    var spacerWidth = fullWidth;\r\n    var spacerHeight = fullHeight;\r\n    if (aspectRatio && isFinite(aspectRatio) && isSvg(srcStr)) {\r\n        // For SVGs, fullWidth and fullHeight can be rounded values, which would\r\n        // cause some discrepancy between the actual aspect ratio and the aspect\r\n        // ratio from those values. So, for those cases, we set large width / height\r\n        // values to get a more precise ratio from the spacer.\r\n        spacerWidth = DEFAULT_SVG_WIDTH;\r\n        spacerHeight = Math.round(spacerWidth / aspectRatio);\r\n    }\r\n    var _b = getWidths(displayWidth, fullWidth, {\r\n        minWidth: displayMinWidth,\r\n    }), sizes = _b.sizes, widthDescs = _b.widthDescs;\r\n    var imageLoader = getImageLoader(loader);\r\n    var spacerSvg = \"<svg width=\\\"\" + spacerWidth + \"\\\" height=\\\"\" + spacerHeight + \"\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\"/>\";\r\n    var spacerSvgBase64 = typeof window === \"undefined\"\r\n        ? Buffer.from(spacerSvg).toString(\"base64\")\r\n        : window.btoa(spacerSvg);\r\n    var wrapperStyle = __assign({}, (style || {}));\r\n    var spacerStyle = pick(style || {}, \"objectFit\", \"objectPosition\");\r\n    if (displayWidth != null && displayWidth !== \"auto\") {\r\n        // If width is set, set it on the wrapper along with min/max width\r\n        // and just use `width: 100%` on the spacer\r\n        spacerStyle.width = \"100%\";\r\n        wrapperStyle.width = displayWidth;\r\n        wrapperStyle.minWidth = displayMinWidth;\r\n        wrapperStyle.maxWidth = displayMaxWidth;\r\n    }\r\n    else {\r\n        // Otherwise, we want auto sizing from the spacer, so set width there.\r\n        //\r\n        // But if we have min/max width, it should be set in the wrapper and it\r\n        // can be percentage values (and we add corresponding min/max width to\r\n        // 100% in the spacer). In general it ends up with the correct effect,\r\n        // but some edge cases might make `min-width: 100%` shrink the image more\r\n        // than it should.\r\n        spacerStyle.width = displayWidth;\r\n        wrapperStyle.width = \"auto\";\r\n        if (displayMinWidth) {\r\n            spacerStyle.minWidth = \"100%\";\r\n            wrapperStyle.minWidth = displayMinWidth;\r\n        }\r\n        if (displayMaxWidth != null && displayMaxWidth !== \"none\") {\r\n            spacerStyle.maxWidth = \"100%\";\r\n            wrapperStyle.maxWidth = displayMaxWidth;\r\n        }\r\n    }\r\n    if (displayHeight != null && displayHeight !== \"auto\") {\r\n        spacerStyle.height = \"100%\";\r\n        wrapperStyle.height = displayHeight;\r\n        wrapperStyle.minHeight = displayMinHeight;\r\n        wrapperStyle.maxHeight = displayMaxHeight;\r\n    }\r\n    else {\r\n        spacerStyle.height = displayHeight;\r\n        wrapperStyle.height = \"auto\";\r\n        if (displayMinHeight) {\r\n            spacerStyle.minHeight = \"100%\";\r\n            wrapperStyle.minHeight = displayMinHeight;\r\n        }\r\n        if (displayMaxHeight != null && displayMaxHeight !== \"none\") {\r\n            spacerStyle.maxHeight = \"100%\";\r\n            wrapperStyle.maxHeight = displayMaxHeight;\r\n        }\r\n    }\r\n    return (React__default[\"default\"].createElement(\"div\", { className: classNames$1(className, \"__wab_img-wrapper\"), ref: outerRef, style: wrapperStyle },\r\n        React__default[\"default\"].createElement(\"img\", { alt: \"\", \"aria-hidden\": true, className: \"__wab_img-spacer-svg\", src: \"data:image/svg+xml;base64,\" + spacerSvgBase64, style: spacerStyle }),\r\n        makePicture({\r\n            imageLoader: imageLoader,\r\n            widthDescs: widthDescs,\r\n            sizes: sizes,\r\n            src: srcStr,\r\n            quality: quality,\r\n            ref: imgRef,\r\n            style: style ? pick(style, \"objectFit\", \"objectPosition\") : undefined,\r\n            imgProps: imgProps,\r\n            className: \"__wab_img\",\r\n        })));\r\n});\r\nfunction makePicture(opts) {\r\n    // If imageLoader is undefined, then this renders to just a normal\r\n    // <img />.  Else it will render to a <picture> with a <source> for\r\n    // webp, and srcSet/sizes set according to width requirements.\r\n    var imageLoader = opts.imageLoader, widthDescs = opts.widthDescs, src = opts.src, quality = opts.quality, style = opts.style, className = opts.className, sizes = opts.sizes, imgProps = opts.imgProps, ref = opts.ref;\r\n    return (React__default[\"default\"].createElement(\"picture\", { className: \"__wab_picture\" },\r\n        imageLoader && imageLoader.supportsUrl(src) && (React__default[\"default\"].createElement(\"source\", { type: \"image/webp\", srcSet: widthDescs\r\n                .map(function (wd) {\r\n                return imageLoader.transformUrl({\r\n                    src: src,\r\n                    quality: quality,\r\n                    width: wd.width,\r\n                    format: \"webp\",\r\n                }) + \" \" + wd.desc;\r\n            })\r\n                .join(\", \") })),\r\n        React__default[\"default\"].createElement(\"img\", __assign({}, imgProps, { ref: ref, className: className, decoding: \"async\", src: imageLoader && imageLoader.supportsUrl(src)\r\n                ? imageLoader.transformUrl({\r\n                    src: src,\r\n                    quality: quality,\r\n                    width: widthDescs[widthDescs.length - 1].width,\r\n                })\r\n                : src, srcSet: imageLoader && imageLoader.supportsUrl(src)\r\n                ? widthDescs\r\n                    .map(function (wd) {\r\n                    return imageLoader.transformUrl({\r\n                        src: src,\r\n                        quality: quality,\r\n                        width: wd.width,\r\n                    }) + \" \" + wd.desc;\r\n                })\r\n                    .join(\", \")\r\n                : undefined, sizes: imageLoader && imageLoader.supportsUrl(src) ? sizes : undefined, style: __assign(__assign({}, (style ? pick(style, \"objectFit\", \"objectPosition\") : {})), { width: 0, height: 0 }) }))));\r\n}\r\nvar DEFAULT_SVG_WIDTH = 10000;\r\nfunction isSvg(src) {\r\n    return src.endsWith(\".svg\") || src.startsWith(\"data:image/svg\");\r\n}\r\nfunction getClosestPresetSize(width, fullWidth) {\r\n    var _a;\r\n    var nextBiggerIndex = (_a = ALL_SIZES.findIndex(function (w) { return w >= width; })) !== null && _a !== void 0 ? _a : ALL_SIZES.length - 1;\r\n    var nextBigger = ALL_SIZES[nextBiggerIndex];\r\n    if (nextBigger >= fullWidth) {\r\n        // If the requested width is larger than the fullWidth,\r\n        // we just use the original width instead. It's impossible\r\n        // to make an image bigger than fullWidth!\r\n        return undefined;\r\n    }\r\n    else if (nextBiggerIndex + 1 < ALL_SIZES.length &&\r\n        fullWidth <= ALL_SIZES[nextBiggerIndex + 1]) {\r\n        // If the fullWidth is just between nextBigger and the one after that,\r\n        // then also might as well just use the original size (so, width is 30,\r\n        // nextBigger is 32, then we just use the original as long as fullWidth is\r\n        // less than 48)\r\n        return undefined;\r\n    }\r\n    return nextBigger;\r\n}\r\n/**\r\n * Computes the appropriate srcSet and sizes to use\r\n */\r\nfunction getWidths(width, fullWidth, extra) {\r\n    var minWidth = extra === null || extra === void 0 ? void 0 : extra.minWidth;\r\n    var pixelWidth = getPixelLength(width);\r\n    var pixelMinWidth = getPixelLength(minWidth);\r\n    if (pixelWidth != null && (!minWidth || pixelMinWidth != null)) {\r\n        // If there's an exact width, then we just need to display it at 1x and 2x density\r\n        return {\r\n            widthDescs: [\r\n                {\r\n                    width: getClosestPresetSize(Math.max(pixelWidth, pixelMinWidth !== null && pixelMinWidth !== void 0 ? pixelMinWidth : 0), fullWidth),\r\n                    desc: \"1x\",\r\n                },\r\n                {\r\n                    width: getClosestPresetSize(Math.max(pixelWidth, pixelMinWidth !== null && pixelMinWidth !== void 0 ? pixelMinWidth : 0) * 2, fullWidth),\r\n                    desc: \"2x\",\r\n                },\r\n            ],\r\n            sizes: undefined,\r\n        };\r\n    }\r\n    // Otherwise we don't know what sizes we'll end up, so we just cap it at\r\n    // device width.  TODO: do better!\r\n    var usefulSizes = DEVICE_SIZES.filter(function (size) { return !fullWidth || size < fullWidth; });\r\n    if (!!fullWidth && usefulSizes.length === 0) {\r\n        // image fullWidth is smaller than all device sizes.  So all we can do\r\n        // is offer 1x\r\n        return {\r\n            widthDescs: [\r\n                {\r\n                    width: getClosestPresetSize(fullWidth, fullWidth),\r\n                    desc: \"1x\",\r\n                },\r\n            ],\r\n            sizes: undefined,\r\n        };\r\n    }\r\n    return {\r\n        widthDescs: usefulSizes.map(function (size) { return ({\r\n            width: getClosestPresetSize(size, fullWidth),\r\n            // If this is the last (buggest) useful width, but it is\r\n            // still within the bounds set by DEVICE_SIZES, then just\r\n            // use the original, unresized image.  This means if we match\r\n            // the largest size, we use unresized and best quality image.\r\n            // We only do this, though, if fullWidth is \"reasonable\" --\r\n            // smaller than the largest size we would consider.\r\n            // i === usefulSizes.length - 1 &&\r\n            // fullWidth < DEVICE_SIZES[DEVICE_SIZES.length - 1]\r\n            //   ? undefined\r\n            //   : size,\r\n            desc: size + \"w\",\r\n        }); }),\r\n        sizes: \"100vw\",\r\n    };\r\n}\r\nfunction getPixelLength(length) {\r\n    if (length == null || length == \"\") {\r\n        return undefined;\r\n    }\r\n    if (typeof length === \"number\") {\r\n        return length;\r\n    }\r\n    var parsed = parseNumeric(length);\r\n    if (parsed && (!parsed.units || parsed.units === \"px\")) {\r\n        return parsed.num;\r\n    }\r\n    return undefined;\r\n}\r\nfunction parseNumeric(val) {\r\n    // Parse strings like \"30\", \"30px\", \"30%\", \"30px /* blah blah */\"\r\n    var res = val.match(/^\\s*(-?(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+))\\s*([a-z]*|%)\\s*(?:\\/\\*.*)?$/i);\r\n    if (res == null) {\r\n        return undefined;\r\n    }\r\n    var num = res[1];\r\n    var units = res[2];\r\n    return { num: +num, units: units };\r\n}\r\nfunction getImageLoader(loader) {\r\n    if (loader == null) {\r\n        return undefined;\r\n    }\r\n    else if (loader === \"plasmic\") {\r\n        return PLASMIC_IMAGE_LOADER;\r\n    }\r\n    else {\r\n        return loader;\r\n    }\r\n}\r\nvar PLASMIC_IMAGE_LOADER = {\r\n    supportsUrl: function (src) {\r\n        return src.startsWith(\"https://img.plasmic.app\") && !isSvg(src);\r\n    },\r\n    transformUrl: function (opts) {\r\n        var _a;\r\n        var params = [\r\n            opts.width ? \"w=\" + opts.width : undefined,\r\n            \"q=\" + ((_a = opts.quality) !== null && _a !== void 0 ? _a : 75),\r\n            opts.format ? \"f=\" + opts.format : undefined,\r\n        ].filter(function (x) { return !!x; });\r\n        return opts.src + \"?\" + params.join(\"&\");\r\n    },\r\n};\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst $f01a183cc7bdff77849e49ad26eb904$var$defaultContext = {\n  prefix: Math.round(Math.random() * 10000000000),\n  current: 0\n};\n\nconst $f01a183cc7bdff77849e49ad26eb904$var$SSRContext = /*#__PURE__*/React__default[\"default\"].createContext($f01a183cc7bdff77849e49ad26eb904$var$defaultContext);\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nfunction SSRProvider(props) {\n  let cur = React.useContext($f01a183cc7bdff77849e49ad26eb904$var$SSRContext);\n  let value = React.useMemo(() => ({\n    // If this is the first SSRProvider, set to zero, otherwise increment.\n    prefix: cur === $f01a183cc7bdff77849e49ad26eb904$var$defaultContext ? 0 : ++cur.prefix,\n    current: 0\n  }), [cur]);\n  return /*#__PURE__*/React__default[\"default\"].createElement($f01a183cc7bdff77849e49ad26eb904$var$SSRContext.Provider, {\n    value: value\n  }, props.children);\n}\n\nvar PlasmicRootContext = React__namespace.createContext(undefined);\r\nfunction PlasmicRootProvider(props) {\r\n    var platform = props.platform, children = props.children;\r\n    var context = React__namespace.useMemo(function () { return ({\r\n        platform: platform,\r\n    }); }, [platform]);\r\n    return (React__namespace.createElement(PlasmicRootContext.Provider, { value: context },\r\n        React__namespace.createElement(SSRProvider, null, children)));\r\n}\n\nfunction renderStack(as, props, hasGap, ref) {\r\n    var children = props.children, rest = __rest(props, [\"children\"]);\r\n    var wrappedChildren = wrapFlexContainerChildren(children, hasGap !== null && hasGap !== void 0 ? hasGap : false);\r\n    return createElementWithChildren(as, __assign({ ref: ref }, rest), wrappedChildren);\r\n}\r\nfunction FlexStack_(props, outerRef) {\r\n    var as = props.as, hasGap = props.hasGap, rest = __rest(props, [\"as\", \"hasGap\"]);\r\n    return renderStack(as !== null && as !== void 0 ? as : \"div\", rest, hasGap, outerRef);\r\n}\r\nvar FlexStack = React__namespace.forwardRef(FlexStack_);\r\nvar makeStackImpl = function (as) {\r\n    return React__namespace.forwardRef(function (props, ref) {\r\n        var hasGap = props.hasGap, rest = __rest(props, [\"hasGap\"]);\r\n        return renderStack(as, rest, hasGap, ref);\r\n    });\r\n};\r\nvar Stack = Object.assign(FlexStack, {\r\n    div: makeStackImpl(\"div\"),\r\n    a: makeStackImpl(\"a\"),\r\n    button: makeStackImpl(\"button\"),\r\n    h1: makeStackImpl(\"h1\"),\r\n    h2: makeStackImpl(\"h2\"),\r\n    h3: makeStackImpl(\"h3\"),\r\n    h4: makeStackImpl(\"h4\"),\r\n    h5: makeStackImpl(\"h5\"),\r\n    h6: makeStackImpl(\"h6\"),\r\n    label: makeStackImpl(\"label\"),\r\n    form: makeStackImpl(\"form\"),\r\n    section: makeStackImpl(\"section\"),\r\n    head: makeStackImpl(\"head\"),\r\n    main: makeStackImpl(\"main\"),\r\n    nav: makeStackImpl(\"nav\"),\r\n});\nfunction wrapFlexContainerChildren(children, hasGap) {\r\n    // We need to always wrap the children, even if there are no gaps, because\r\n    // otherwise if we toggle between with and without gap, React reconciliation\r\n    // will blow away the children tree and all state if we switch from having\r\n    // a wrapper and not.\r\n    var className = hasGap ? \"__wab_flex-container\" : \"__wab_passthrough\";\r\n    if (!children) {\r\n        return null;\r\n    }\r\n    else if (Array.isArray(children)) {\r\n        return React__namespace.createElement.apply(React__namespace, __spreadArray([\"div\", { className: className }], children));\r\n    }\r\n    else {\r\n        return React__namespace.createElement(\"div\", { className: className }, children);\r\n    }\r\n}\r\nfunction createPlasmicElement(override, defaultRoot, defaultProps, wrapChildrenInFlex) {\r\n    if (!override || Object.keys(override).length === 0) {\r\n        return createElementWithChildren(defaultRoot, defaultProps, defaultProps.children);\r\n    }\r\n    var override2 = deriveOverride(override);\r\n    var props = mergeOverrideProps(defaultProps, override2.props);\r\n    if (override2.type === \"render\") {\r\n        return override2.render(props, defaultRoot);\r\n    }\r\n    var root = defaultRoot;\r\n    if (override2.type === \"as\" && override2.as) {\r\n        if (defaultRoot === Stack) {\r\n            // If there was an \"as\" override specified, but the default type is\r\n            // a Stack, then we don't want to switch to using \"as\" as the root,\r\n            // because then we'd lose the flex wrapper that Stack provides.\r\n            // Instead, we specify the \"as\" as the \"as\" prop to Stack.\r\n            props.as = override2.as;\r\n        }\r\n        else {\r\n            root = override2.as;\r\n        }\r\n    }\r\n    var children = props.children;\r\n    if (override2.wrapChildren) {\r\n        children = override2.wrapChildren(ensureNotArray(children));\r\n    }\r\n    if (wrapChildrenInFlex) {\r\n        // For legacy, we still support data-plasmic-wrap-flex-children\r\n        children = wrapFlexContainerChildren(children, true);\r\n    }\r\n    var result = createElementWithChildren(root, props, children);\r\n    if (override2.wrap) {\r\n        result = override2.wrap(result);\r\n    }\r\n    return result;\r\n}\r\n// We use data-plasmic-XXX attributes for custom properties since Typescript doesn't\r\n// support type check on jsx pragma. See https://github.com/microsoft/TypeScript/issues/21699\r\n// for more info.\r\nvar seenElements = new Map();\r\nfunction createPlasmicElementProxy(defaultElement, props) {\r\n    // We use seenElements to keep track of elements that has been rendered by\r\n    // createPlasmicElementProxy().  When a JSX tree is evaluated, the JSX factory\r\n    // is invoked from the leaf to the root as the last call.  So we can store\r\n    // all the elements we've created until we encounter the leaf, at which point\r\n    // we will clear this map.  We are guaranteed that this map will only contain\r\n    // elements from one Plasmic* component at a time, because we're just creating\r\n    // elements and not \"rendering\" at this point; even if this JSX tree references\r\n    // other Plasmic* elements, we'll just create an element referencing that component,\r\n    // rather than following into the content of that component.\r\n    //\r\n    // TODO: is this ConcurrentMode friendly?\r\n    var _a;\r\n    var children = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        children[_i - 2] = arguments[_i];\r\n    }\r\n    if (props == null) {\r\n        props = {};\r\n    }\r\n    var name = props[\"data-plasmic-name\"];\r\n    var isRoot = props[\"data-plasmic-root\"];\r\n    var forNodeName = props[\"data-plasmic-for-node\"];\r\n    delete props[\"data-plasmic-name\"];\r\n    delete props[\"data-plasmic-root\"];\r\n    delete props[\"data-plasmic-for-node\"];\r\n    var element = createPlasmicElementFromJsx.apply(void 0, __spreadArray([defaultElement,\r\n        props], children));\r\n    if (name) {\r\n        seenElements.set(name, element);\r\n    }\r\n    if (isRoot) {\r\n        // If this is the root, and we requested a specific node by specifying data-plasmic-for-node,\r\n        // then return that node instead\r\n        var forNode = forNodeName\r\n            ? (_a = seenElements.get(forNodeName)) !== null && _a !== void 0 ? _a : null\r\n            : element;\r\n        // Clear out the seenElements map, as we're done rendering this Plasmic* component.\r\n        seenElements.clear();\r\n        return forNode;\r\n    }\r\n    return element;\r\n}\r\nfunction createPlasmicElementFromJsx(defaultElement, props) {\r\n    var _a;\r\n    var children = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        children[_i - 2] = arguments[_i];\r\n    }\r\n    var override = props[\"data-plasmic-override\"];\r\n    var wrapFlexChild = props[\"data-plasmic-wrap-flex-child\"];\r\n    var triggerProps = ((_a = props[\"data-plasmic-trigger-props\"]) !== null && _a !== void 0 ? _a : []);\r\n    delete props[\"data-plasmic-override\"];\r\n    delete props[\"data-plasmic-wrap-flex-child\"];\r\n    delete props[\"data-plasmic-trigger-props\"];\r\n    return createPlasmicElement(override, defaultElement, mergeProps.apply(void 0, __spreadArray([props,\r\n        children.length === 0 ? {} : { children: children.length === 1 ? children[0] : children }], triggerProps)), wrapFlexChild);\r\n}\r\nvar UNSET = Symbol(\"UNSET\");\r\nfunction mergeOverrideProps(defaults, overrides) {\r\n    if (!overrides) {\r\n        return defaults;\r\n    }\r\n    var result = __assign({}, defaults);\r\n    for (var _i = 0, _a = Object.keys(overrides); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var defaultVal = defaults[key];\r\n        var overrideVal = overrides[key];\r\n        if (overrideVal === UNSET) {\r\n            delete result[key];\r\n        }\r\n        else {\r\n            // We use the NONE sentinel if the overrideVal is nil, and is not one of the\r\n            // props that we merge by default -- which are className, style, and\r\n            // event handlers.  This means for all other \"normal\" props -- like children,\r\n            // title, etc -- a nil value will unset the default.\r\n            if (overrideVal == null &&\r\n                key !== \"className\" &&\r\n                key !== \"style\" &&\r\n                !(key.startsWith(\"on\") && typeof defaultVal === \"function\")) {\r\n                overrideVal = NONE;\r\n            }\r\n            result[key] = mergePropVals(key, defaultVal, overrideVal);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction deriveOverride(x) {\r\n    if (!x) {\r\n        // undefined Binding is an empty Binding\r\n        return {\r\n            type: \"default\",\r\n            props: {},\r\n        };\r\n    }\r\n    else if (isReactNode(x)) {\r\n        // If ReactNode, then assume this is the children\r\n        return {\r\n            type: \"default\",\r\n            props: {\r\n                children: x,\r\n            },\r\n        };\r\n    }\r\n    else if (typeof x === \"object\") {\r\n        // If any of the overrideKeys is a key of this object, then assume\r\n        // this is a full Override\r\n        if (\"as\" in x) {\r\n            return __assign(__assign({}, x), { props: x.props || {}, type: \"as\" });\r\n        }\r\n        else if (\"render\" in x) {\r\n            return __assign(__assign({}, x), { type: \"render\" });\r\n        }\r\n        else if (\"props\" in x) {\r\n            return __assign(__assign({}, x), { props: x.props || {}, type: \"default\" });\r\n        }\r\n        else if (isSubset(Object.keys(x), [\"wrap\", \"wrapChildren\"])) {\r\n            // Only twiddling functions present, so assume no props overrides\r\n            // (otherwise we'd assume these were props).\r\n            return __assign(__assign({}, x), { props: {}, type: \"default\" });\r\n        }\r\n        // Else, assume this is just a props object.\r\n        return {\r\n            type: \"default\",\r\n            props: x,\r\n        };\r\n    }\r\n    else if (typeof x === \"function\") {\r\n        return {\r\n            type: \"render\",\r\n            render: x,\r\n        };\r\n    }\r\n    throw new Error(\"Unexpected override: \" + x);\r\n}\r\nfunction mergeVariants(v1, v2) {\r\n    if (!v1 || !v2) {\r\n        return v1 || v2 || {};\r\n    }\r\n    return __assign(__assign({}, v1), v2);\r\n}\r\nfunction mergeArgs(a1, a2) {\r\n    if (!a1 || !a2) {\r\n        return a1 || a2 || {};\r\n    }\r\n    return __assign(__assign({}, a1), a2);\r\n}\r\nfunction mergeFlexOverrides(o1, o2) {\r\n    if (!o2) {\r\n        return o1;\r\n    }\r\n    var keys = Array.from(new Set(__spreadArray(__spreadArray([], Object.keys(o1)), Object.keys(o2))));\r\n    var merged = {};\r\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\r\n        var key = keys_1[_i];\r\n        merged[key] = mergeFlexOverride(o1[key], o2[key]);\r\n    }\r\n    return merged;\r\n}\r\nfunction mergeFlexOverride(fo1, fo2) {\r\n    var _a, _b;\r\n    if (!fo1) {\r\n        return fo2;\r\n    }\r\n    if (!fo2) {\r\n        return fo1;\r\n    }\r\n    var o1 = deriveOverride(fo1);\r\n    var o2 = deriveOverride(fo2);\r\n    var wrap = chainSingleArgFuncs.apply(void 0, [o1.wrap, o2.wrap].filter(notNil));\r\n    var wrapChildren = chainSingleArgFuncs.apply(void 0, [o1.wrapChildren, o2.wrapChildren].filter(notNil));\r\n    // \"render\" type always takes precedence, but we still merge the props\r\n    var props = mergeOverrideProps((_a = o1.props) !== null && _a !== void 0 ? _a : {}, o2.props);\r\n    if (o2.type === \"render\") {\r\n        return {\r\n            render: o2.render,\r\n            props: props,\r\n            wrap: wrap,\r\n            wrapChildren: wrapChildren,\r\n        };\r\n    }\r\n    if (o1.type === \"render\") {\r\n        return {\r\n            render: o1.render,\r\n            props: props,\r\n            wrap: wrap,\r\n            wrapChildren: wrapChildren,\r\n        };\r\n    }\r\n    // \"as\" will take precedence\r\n    var as = (_b = (o2.type === \"as\" ? o2.as : undefined)) !== null && _b !== void 0 ? _b : (o1.type === \"as\" ? o1.as : undefined);\r\n    return __assign({ props: props,\r\n        wrap: wrap,\r\n        wrapChildren: wrapChildren }, (as ? { as: as } : {}));\r\n}\r\nfunction deriveRenderOpts(props, config) {\r\n    var _a;\r\n    var name = config.name, descendantNames = config.descendantNames, internalVariantPropNames = config.internalVariantPropNames, internalArgPropNames = config.internalArgPropNames;\r\n    var reservedPropNames = [\"variants\", \"args\", \"overrides\"];\r\n    var variants = mergeVariants(omit.apply(void 0, __spreadArray([pick.apply(void 0, __spreadArray([props], internalVariantPropNames))], reservedPropNames)), props.variants);\r\n    var args = mergeArgs(omit.apply(void 0, __spreadArray([pick.apply(void 0, __spreadArray([props], internalArgPropNames))], reservedPropNames)), props.args);\r\n    var overrides = mergeFlexOverrides(omit.apply(void 0, __spreadArray(__spreadArray(__spreadArray([pick.apply(void 0, __spreadArray([props], descendantNames))], internalArgPropNames), internalVariantPropNames), reservedPropNames)), props.overrides);\r\n    var leftoverProps = omit.apply(void 0, __spreadArray(__spreadArray(__spreadArray([props,\r\n        \"variants\",\r\n        \"args\",\r\n        \"overrides\"], descendantNames), internalVariantPropNames), internalArgPropNames));\r\n    if (Object.keys(leftoverProps).length > 0) {\r\n        overrides = mergeFlexOverrides(overrides, (_a = {},\r\n            _a[name] = {\r\n                props: leftoverProps,\r\n            },\r\n            _a));\r\n    }\r\n    return { variants: variants, args: args, overrides: overrides };\r\n}\n\nfunction PlasmicLink(props) {\r\n    // props.href is required for nextjs; if no props.href,\r\n    // then we just render the default anchor element\r\n    if (props.platform === \"nextjs\" && props.href) {\r\n        var nextjsProps = [\r\n            \"href\",\r\n            \"replace\",\r\n            \"scroll\",\r\n            \"shallow\",\r\n            \"passHref\",\r\n            \"prefetch\",\r\n            \"locale\",\r\n        ];\r\n        return React__default[\"default\"].createElement(props.component, pick.apply(void 0, __spreadArray([props], nextjsProps)), React__default[\"default\"].createElement(\"a\", __assign({}, omit.apply(void 0, __spreadArray([props, \"component\", \"platform\"], nextjsProps)))));\r\n    }\r\n    if (props.platform === \"gatsby\" && isInternalHref(props.href)) {\r\n        return React__default[\"default\"].createElement(props.component, __assign(__assign({}, omit(props, \"component\", \"platform\", \"href\")), { to: props.href }));\r\n    }\r\n    return React__default[\"default\"].createElement(\"a\", __assign({}, omit(props, \"component\", \"platform\")));\r\n}\r\nfunction isInternalHref(href) {\r\n    return /^\\/(?!\\/)/.test(href);\r\n}\nfunction renderPlasmicSlot(opts) {\r\n    var as = opts.as, defaultContents = opts.defaultContents, value = opts.value, rest = __rest(opts, [\"as\", \"defaultContents\", \"value\"]);\r\n    var content = value === undefined ? defaultContents : value;\r\n    if (!content || (Array.isArray(content) && content.length === 0)) {\r\n        return null;\r\n    }\r\n    // If the content is a raw string, then we need to wrap the raw string\r\n    // into an element, in case the slot is inside a flex-gap\r\n    // container (you cannot apply margin to just a text node).\r\n    var maybeString = maybeAsString(content);\r\n    if (maybeString) {\r\n        content = React__namespace.createElement(\"div\", { className: \"__wab_slot-string-wrapper\" }, maybeString);\r\n    }\r\n    var nonEmptyProps = Object.keys(rest).filter(function (p) { return !!rest[p]; });\r\n    if (nonEmptyProps.length === 0) {\r\n        // No attrs to apply to the slot (which means the slot is unstyled), then\r\n        // just render the content directly; no need for style wrapper.\r\n        return React__namespace.createElement(React__namespace.Fragment, null, content);\r\n    }\r\n    return React__namespace.createElement(as || \"div\", mergeProps({ className: \"__wab_slot\" }, rest), content);\r\n}\r\nfunction maybeAsString(node) {\r\n    // Unwrap fragments\r\n    if (React__namespace.isValidElement(node) && node.type === React__namespace.Fragment) {\r\n        return maybeAsString(node.props.children);\r\n    }\r\n    if (typeof node === \"string\") {\r\n        return node;\r\n    }\r\n    if (Array.isArray(node) && node.length === 1 && typeof node[0] === \"string\") {\r\n        return node[0];\r\n    }\r\n    return undefined;\r\n}\n\nvar listeners = [];\r\nvar queries = {};\r\nfunction matchScreenVariants() {\r\n    if (!isBrowser) {\r\n        return [];\r\n    }\r\n    return Object.entries(queries)\r\n        .filter(function (_a) {\r\n        var query = _a[1];\r\n        return window.matchMedia(query).matches;\r\n    })\r\n        .map(function (_a) {\r\n        var name = _a[0];\r\n        return name;\r\n    });\r\n}\r\n// undefined if screen variants have never been calculated\r\nvar curScreenVariants = undefined;\r\nfunction recalculateScreenVariants() {\r\n    var screenVariant = matchScreenVariants();\r\n    if (!curScreenVariants ||\r\n        screenVariant.join(\"\") !== curScreenVariants.join(\"\")) {\r\n        curScreenVariants = screenVariant;\r\n        _reactDom__default[\"default\"].unstable_batchedUpdates(function () {\r\n            return listeners.forEach(function (listener) { return listener(); });\r\n        });\r\n    }\r\n}\r\nfunction ensureInitCurScreenVariants() {\r\n    // Initializes curScreenVariants if it hadn't been before. Note that this must\r\n    // be called from within an effect.\r\n    if (curScreenVariants === undefined) {\r\n        curScreenVariants = matchScreenVariants();\r\n    }\r\n}\r\nif (isBrowser) {\r\n    window.addEventListener(\"resize\", recalculateScreenVariants);\r\n}\r\nfunction createUseScreenVariants(isMulti, screenQueries) {\r\n    Object.assign(queries, screenQueries);\r\n    curScreenVariants = undefined;\r\n    return function () {\r\n        // It is important that upon first render, we return [] or undefined, because\r\n        // that is what SSR will use, and the client must match.  In an effect (which\r\n        // only happens on the client), we then actually ask for the real screen variant\r\n        // and, if different from [] or undefined, forces a re-render.\r\n        var _a = React__namespace.useState(), updateState = _a[1];\r\n        var lastScreenVariantsRef = React__namespace.useRef(curScreenVariants || []);\r\n        // We do useLayoutEffect instead of useEffect to immediately\r\n        // register our forceUpdate. This ensures that if there was\r\n        // a window resize event between render and effects, that the\r\n        // listener will be registered in time\r\n        useIsomorphicLayoutEffect(function () {\r\n            var updateIfChanged = function () {\r\n                if (curScreenVariants &&\r\n                    lastScreenVariantsRef.current.join(\"\") !== curScreenVariants.join(\"\")) {\r\n                    lastScreenVariantsRef.current = curScreenVariants;\r\n                    // Force update\r\n                    updateState({});\r\n                }\r\n            };\r\n            // Listeners are invoked whenever the window is resized\r\n            listeners.push(updateIfChanged);\r\n            // Initialize the curScreenVariants for the first time.  We don't need\r\n            // to invoke the listeners here because all components will already\r\n            // have this effect running and will re-render if the real screen\r\n            // variant is non-empty.\r\n            ensureInitCurScreenVariants();\r\n            // Now, if the curScreenVariants differs from what we returned last,\r\n            // then force a re-render.\r\n            updateIfChanged();\r\n            return function () {\r\n                // Remove our listener on unmount\r\n                listeners.splice(listeners.indexOf(updateIfChanged), 1);\r\n            };\r\n        }, []);\r\n        if (isMulti) {\r\n            return curScreenVariants || [];\r\n        }\r\n        else if (curScreenVariants) {\r\n            return curScreenVariants[curScreenVariants.length - 1];\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n}\n\n// Utilities used by generated code\r\nvar classNames = classNames$1;\n\nexports.PlasmicLink = PlasmicLink;\nexports.PlasmicRootProvider = PlasmicRootProvider;\nexports.Stack = Stack;\nexports.classNames = classNames;\nexports.createPlasmicElementProxy = createPlasmicElementProxy;\nexports.createUseScreenVariants = createUseScreenVariants;\nexports.deriveRenderOpts = deriveRenderOpts;\nexports.renderPlasmicSlot = renderPlasmicSlot;\n","imports":["react","react-dom"],"type":"code"},{"fileName":"render__AyJP-TfUPEv.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar Head = require('next/head');\nvar index = require('./index-cc64b87e.js');\nvar comp__VM0F3zzIlnj = require('./comp__VM0F3zzIlnj.js');\nvar comp__bBUJjznAyLU = require('./comp__bBUJjznAyLU.js');\nvar comp__im6OlyArx76 = require('./comp__im6OlyArx76.js');\nrequire('react-dom');\nrequire('next/link');\nrequire('./comp__sHD_5zXf77Q-00a0ddb1.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar Head__default = /*#__PURE__*/_interopDefaultLegacy(Head);\n\nconst _jsxFileName = \"/tmp/tmp-40-8x0qKHKm1t3H/render__AyJP-TfUPEv.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicPosts__VariantProps = new Array();\n  \n\n    \n    \n\n    const PlasmicPosts__ArgProps = new Array();\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n\n    \n\n    \n    function PlasmicPosts__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        index.createPlasmicElementProxy(React__namespace.Fragment, {__self: this, __source: {fileName: _jsxFileName, lineNumber: 89}}\n\n      , index.createPlasmicElementProxy(Head__default[\"default\"], {__self: this, __source: {fileName: _jsxFileName, lineNumber: 91}}\n        , index.createPlasmicElementProxy('meta', { name: \"twitter:card\", content: \"summary\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 92}} )\n\n\n\n      )\n\n\n      , index.createPlasmicElementProxy('style', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 99}}, `\n        body {\n          margin: 0;\n        }\n      `)\n\n\n      , index.createPlasmicElementProxy('div', { className: \"plasmic_page_wrapper\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 106}}\n\n  , index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_wouGT5KyY4fTan3PA39SdB\", \"Posts__root__k1Ij\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 108}}\n    \n    \n\n  , index.createPlasmicElementProxy(index.Stack, {\n    as: \"div\",\n    \n    'data-plasmic-override': overrides.freeBox,\n    \n    \n    hasGap: true,\n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"Posts__freeBox__nCsVk\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 119}}\n    \n    \n\n  , index.createPlasmicElementProxy(comp__VM0F3zzIlnj[\"default\"], {\n    \n    \n    'data-plasmic-override': overrides.homeHeader,\n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"Posts__homeHeader__x8JxI\"),\ntitle: \n  index.createPlasmicElementProxy('div', {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"__wab_text\", \"Posts__text__agoGd\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 139}}\n    \n    \n          ,  \"Plasmic Starter Blog\" \n        )\n  , __self: this, __source: {fileName: _jsxFileName, lineNumber: 130}}\n    \n    )\n\n\n  , index.createPlasmicElementProxy('div', {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"__wab_text\", \"Posts__text__drCd3\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 156}}\n    \n    \n          ,  \"Hello there!!!!\" \n        )\n\n\n  , index.createPlasmicElementProxy(index.Stack, {\n    as: \"div\",\n    \n    'data-plasmic-override': overrides.container,\n    \n    \n    hasGap: true,\n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"Posts__container__uAkfJ\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 170}}\n    \n    \n\n  , index.createPlasmicElementProxy(comp__bBUJjznAyLU[\"default\"], {\n    \n    \n    \n    \n    \n    \n    date: \"April 1, 2020\",\ndescription: \"3 months later, I'm still blogging\",\ntitle: \"Fourth post\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 181}}\n    \n    )\n\n\n  , index.createPlasmicElementProxy(comp__bBUJjznAyLU[\"default\"], {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"Posts__listItem__l8I13\"),\ndate: \"March 1, 2020\",\ndescription: \"2 months later, I'm still blogging.\",\ntitle: \"Third post\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 195}}\n    \n    )\n\n\n  , index.createPlasmicElementProxy(comp__bBUJjznAyLU[\"default\"], {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"Posts__listItem__v7557\"),\ndate: \"February 1, 2020\",\ndescription: \"1 month later, I'm still blogging.\",\ntitle: \"Second post\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 210}}\n    \n    )\n\n\n  , index.createPlasmicElementProxy(comp__bBUJjznAyLU[\"default\"], {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"Posts__listItem__bwW1W\"),\ndate: \"January 1, 2020\",\ndescription: \"Hello world\",\ntitle: \"Hello world\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 225}}\n    \n    )\n\n        )\n\n\n  , index.createPlasmicElementProxy(comp__im6OlyArx76[\"default\"], {\n    \n    \n    'data-plasmic-override': overrides.footer,\n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"Posts__footer__sJVp\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 242}}\n    \n    )\n\n        )\n\n        )\n\n      )\n\n  )\n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\", \"freeBox\", \"homeHeader\", \"container\", \"footer\"],\nfreeBox: [\"freeBox\", \"homeHeader\", \"container\", \"footer\"],\nhomeHeader: [\"homeHeader\"],\ncontainer: [\"container\"],\nfooter: [\"footer\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicPosts__ArgProps,\n          internalVariantPropNames: PlasmicPosts__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicPosts__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicPosts\";\n      } else {\n        func.displayName = `PlasmicPosts.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicPosts = Object.assign(\n      // Top-level PlasmicPosts renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicPosts\n        internalVariantProps: PlasmicPosts__VariantProps,\n        internalArgProps: PlasmicPosts__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nexports.PlasmicPosts = PlasmicPosts;\nexports.PlasmicPosts__ArgProps = PlasmicPosts__ArgProps;\nexports.PlasmicPosts__VariantProps = PlasmicPosts__VariantProps;\nexports[\"default\"] = PlasmicPosts;\n","imports":["react","next/head","index-cc64b87e.js","comp__VM0F3zzIlnj.js","comp__bBUJjznAyLU.js","comp__im6OlyArx76.js","react-dom","next/link","comp__sHD_5zXf77Q-00a0ddb1.js","css__AyJP-TfUPEv.css"],"type":"code"},{"fileName":"root-provider.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('./index-cc64b87e.js');\nrequire('react');\nrequire('react-dom');\n\n\n\nexports[\"default\"] = index.PlasmicRootProvider;\n","imports":["index-cc64b87e.js","react","react-dom"],"type":"code"}],"server":[]},"external":["next/head","next/link","react","react-dom"],"components":[{"id":"AyJP-TfUPEv","usedComponents":["VM0F3zzIlnj","bBUJjznAyLU","im6OlyArx76"],"projectId":"wouGT5KyY4fTan3PA39SdB","name":"Posts","renderFile":"render__AyJP-TfUPEv.js","skeletonFile":"comp__AyJP-TfUPEv.js","cssFile":"css__AyJP-TfUPEv.css","path":"/posts","isPage":true,"entry":"render__AyJP-TfUPEv.js","isCode":false,"pageMetadata":{"path":"/posts","description":"","title":null}},{"id":"VM0F3zzIlnj","usedComponents":["sHD_5zXf77Q"],"projectId":"wouGT5KyY4fTan3PA39SdB","name":"HomeHeader","renderFile":"render__VM0F3zzIlnj.js","skeletonFile":"comp__VM0F3zzIlnj.js","cssFile":"css__VM0F3zzIlnj.css","isPage":false,"entry":"comp__VM0F3zzIlnj.js","isCode":false},{"id":"bBUJjznAyLU","usedComponents":[],"projectId":"wouGT5KyY4fTan3PA39SdB","name":"ListItem","renderFile":"render__bBUJjznAyLU.js","skeletonFile":"comp__bBUJjznAyLU.js","cssFile":"css__bBUJjznAyLU.css","isPage":false,"entry":"comp__bBUJjznAyLU.js","isCode":false},{"id":"im6OlyArx76","usedComponents":[],"projectId":"wouGT5KyY4fTan3PA39SdB","name":"Footer","renderFile":"render__im6OlyArx76.js","skeletonFile":"comp__im6OlyArx76.js","cssFile":"css__im6OlyArx76.css","isPage":false,"entry":"comp__im6OlyArx76.js","isCode":false},{"id":"sHD_5zXf77Q","usedComponents":[],"projectId":"wouGT5KyY4fTan3PA39SdB","name":"AuthorBio","renderFile":"render__sHD_5zXf77Q.js","skeletonFile":"comp__sHD_5zXf77Q.js","cssFile":"css__sHD_5zXf77Q.css","isPage":false,"entry":"comp__sHD_5zXf77Q.js","isCode":false}],"globalGroups":[{"id":"9l27Fd1hfaG","projectId":"wouGT5KyY4fTan3PA39SdB","name":"Screen","contextFile":"global__9l27Fd1hfaG.js","type":"global-screen","useName":"useScreen"}],"projects":[{"id":"wouGT5KyY4fTan3PA39SdB","name":"Bedrock","version":"latest","remoteFonts":[{"url":"https://fonts.googleapis.com/css2?family=Merriweather%3Aital%2Cwght%400%2C400%3B0%2C700%3B0%2C900&family=Montserrat%3Aital%2Cwght%400%2C400%3B0%2C700%3B0%2C900&display=swap"}]}]},"remoteFontUrls":["https://fonts.googleapis.com/css2?family=Merriweather%3Aital%2Cwght%400%2C400%3B0%2C700%3B0%2C900&family=Montserrat%3Aital%2Cwght%400%2C400%3B0%2C700%3B0%2C900&display=swap"]},"posts":[{"id":3677,"date":"2021-08-05T12:40:00","date_gmt":"2021-08-05T19:40:00","guid":{"rendered":"https://historicagency.com/?p=3677"},"modified":"2021-09-02T13:44:55","modified_gmt":"2021-09-02T20:44:55","slug":"how-a-marquee-culture-keeps-your-brand-ahead-of-the-pack","status":"publish","type":"post","link":"https://historicagency.com/how-a-marquee-culture-keeps-your-brand-ahead-of-the-pack/","title":{"rendered":"How a Marquee Culture Keeps Your Brand Ahead of the Pack"},"content":{"rendered":"\n<p>Your culture is the loudest expression of your brand.</p>\n\n\n\n<p>Your organizational culture determines how your employees act, the decisions they make, and the quality of their work.</p>\n\n\n\n<p>Your employees, in turn, broadcast your brand by providing customer experiences that either ring true to your promise—or disintegrate it.</p>\n\n\n\n<p>That’s why brand and culture alignment is critical to improving employee performance and making you stand out from the competition.</p>\n\n\n\n<h2>How Organizational Culture Affects Employee Performance</h2>\n\n\n\n<p>When done right, your culture makes a big statement about who you are and what your audience can expect from you.&nbsp;</p>\n\n\n\n<p>Imagine having a culture that can:</p>\n\n\n\n<ul><li>Equip your staff to consistently deliver on your brand promise.</li><li>Turn your employees into your greatest brand advocates by helping them feel more deeply engaged.</li><li>Align your internal systems and structures to serve and empower the people they’re designed to support.</li><li>Create customer experiences that energize your team and reinforce what’s most important about your brand.</li><li>Turn your organization’s differentiated ways of doing things into second nature for anyone at any level of your organization.</li></ul>\n\n\n\n<p>This type of internal company culture is what separates a brand from the rest.&nbsp;</p>\n\n\n\n<p>It attracts tribes of followers inside and out—not only because the brand delivers on its promise, but also because everything the organization does comes together to create an irresistible experience for both employees and customers.</p>\n\n\n\n<h2>The Marquee Culture Method for Brand and Culture Alignment</h2>\n\n\n\n<p>A Marquee Culture does just that. It aligns brand and culture inside and out to turn employees and customers into such brilliant brand advocates that you end up spending less on advertising.</p>\n\n\n\n<p>Like a brightly lit sign announcing what your brand stands for, a Marquee Culture showcases who you are, what you do, and what customers can expect from you. It’s intentionally designed to stand out, make a huge promise, and offer something big to draw people in.&nbsp;</p>\n\n\n\n<p>The Marquee Culture method integrates your brand into everything you do. It aligns every layer of your organizational culture to help your people live out the brand and deliver something great. It transforms your internal company culture to showcase who you are and ensure your brand makes a huge promise, attracts more customers, and gives you a competitive edge.</p>\n\n\n\n<h2>Outpace the Competition, One Layer of Culture at a Time</h2>\n\n\n\n<p>The Marquee Culture method works by infusing your brand into six distinct yet interconnected layers of your company culture.</p>\n\n\n\n<h3>Principles</h3>\n\n\n\n<p>Start out by crafting your Principles. To identify your Principles, <strong>dive deep into your core values and connect them to specific employee behaviors</strong> that differentiate your brand from your competitors.</p>\n\n\n\n<h3>Architecture</h3>\n\n\n\n<p>The next layer of culture is Architecture, your internal systems and structures such as budgets, accounting software, hiring practices, benefits packages, and more. <strong>Align your systems and structures to reflect your brand</strong>, and you’ll support your staff to do amazing work.</p>\n\n\n\n<p>Architecture is by far the thickest layer of culture. But every step you take to infuse your brand into your systems and structures will pay off with a more engaged and efficient workforce that stays ahead of the pack.</p>\n\n\n\n<h3>Rituals</h3>\n\n\n\n<p>Rituals help bring your brand to life by giving your staff opportunities to engage with your values and express what your brand stands for. <strong>Create brand-building experiences that reinforce what’s most important</strong> in your organization while creating a sense of joy and energy.</p>\n\n\n\n<h3>Lore</h3>\n\n\n\n<p>Lore is the canon of stories (the good, the bad, and the mundane) that circulate inside your company. Keep an eye out for negative Lore, and <strong>cultivate brand-positive Lore by listening to your people and fostering a culture that reflects your brand</strong>.&nbsp;</p>\n\n\n\n<h3>Vocabulary</h3>\n\n\n\n<p>Vocabulary involves the brand-building words and phrases that help your team understand the key concepts driving your brand. Be sure to <strong>curate a Vocabulary that keeps your people focused on moving your brand forward</strong>.</p>\n\n\n\n<h3>Artifacts</h3>\n\n\n\n<p>The final layer of culture is Artifacts, the physical spaces and tangible objects that people can see, feel, and touch to engage with your brand. <strong>Customize your Artifacts and create intentionally designed swag</strong> that resonates with your employees and reinforces your brand.&nbsp;</p>\n\n\n\n<p></p>\n\n\n\n<p>Every action you take to integrate your brand into the layers of your culture makes a difference!</p>\n\n\n\n<p>Building a Marquee Culture takes work. But the potential payoff in increased employee engagement, accelerated performance, customer loyalty, and brand differentiation is well worth the effort.</p>\n\n\n\n<p><a href=\"http://culturebuiltmybrand.com\" target=\"_blank\" rel=\"noreferrer noopener\">Get your guidebook</a> to winning more customers through your company culture.</p>\n","protected":false},"excerpt":{"rendered":"<p>Elevate your brand with the Marquee Culture method and equip your employees to create brilliant customer experiences that outperform the competition.</p>\n","protected":false},"author":15,"featured_media":3682,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"post-tag":[],"_links":{"self":[{"href":"https://historicagency.com/wp-json/wp/v2/posts/3677"}],"collection":[{"href":"https://historicagency.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://historicagency.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/users/15"}],"replies":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/comments?post=3677"}],"version-history":[{"count":0,"href":"https://historicagency.com/wp-json/wp/v2/posts/3677/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/media/3682"}],"wp:attachment":[{"href":"https://historicagency.com/wp-json/wp/v2/media?parent=3677"}],"wp:term":[{"taxonomy":"post-tag","embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/post-tag?post=3677"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3675,"date":"2021-08-05T12:34:44","date_gmt":"2021-08-05T19:34:44","guid":{"rendered":"https://historicagency.com/?p=3675"},"modified":"2021-08-23T16:22:44","modified_gmt":"2021-08-23T23:22:44","slug":"culture-is-brand","status":"publish","type":"post","link":"https://historicagency.com/culture-is-brand/","title":{"rendered":"Culture Is Brand"},"content":{"rendered":"\n<p>Think about your favorite brand, the one you always end up bringing up in conversations with strangers.</p>\n\n\n\n<p>What makes it a brilliant brand? Maybe it has a great product or service.</p>\n\n\n\n<p>But beyond that, how did the brand win you over as a loyal customer?</p>\n\n\n\n<p>The best brands have teams that deliver consistently on their brand promise.</p>\n\n\n\n<p>The good news is that you can get your employees to do the same. How? By aligning your brand and culture.</p>\n\n\n\n<h2>The Secret Sauce to Building a Stand-Out Brand</h2>\n\n\n\n<p>The best brands don’t turn out great by accident. No matter their size or type, stand-out brands tend to have one thing in common: <strong>an aligned company culture</strong>.</p>\n\n\n\n<p>That means every element of their internal culture works together to support the brand.&nbsp;</p>\n\n\n\n<p>These companies understand that how they operate on the inside is more important than how they look on the outside. Their internal culture—how their employees communicate and behave—defines the brand more than their logo or website.</p>\n\n\n\n<p>In other words, their culture <em>is</em> their brand strategy.</p>\n\n\n\n<p>Consider this: No organization has failed because of its logo. But many have failed because of their internal culture.</p>\n\n\n\n<p>So what should does an internal culture look like?</p>\n\n\n\n<h2>Company Culture Defined</h2>\n\n\n\n<p>Company culture is your organization’s internal environment. It’s the sum of all the actions and decisions made by your team. Culture dictates how you operate on the inside, and it shapes how your people behave.&nbsp;</p>\n\n\n\n<p>Company culture is multi-layered. It starts with organizational values and expands to include everything from how you hire and how you fire, to the words your team uses and the stories they share at the water cooler.&nbsp;</p>\n\n\n\n<p>Even mundane things matter when it comes to culture, such as the types of snacks you offer and the expense report software your finance team uses.&nbsp;</p>\n\n\n\n<p>These invisible aspects of culture define your brand.&nbsp;</p>\n\n\n\n<p>In other words, your brand is only as successful and profitable as your culture allows it to be.</p>\n\n\n\n<h2>Brand Is Culture, Culture Is Brand</h2>\n\n\n\n<p>Let’s take stock of your company culture.</p>\n\n\n\n<p>How would you define your culture? Would your employees describe it the same way?</p>\n\n\n\n<p>If you’re like most business leaders, you probably haven’t invested enough into creating a clear company culture that has everyone on the same page.&nbsp;</p>\n\n\n\n<p>You’re not alone. Many executives treat company culture as an afterthought.&nbsp;</p>\n\n\n\n<p>And we get why. Leaders are busy. With so many things competing for your attention, it’s easy to push culture to the wayside and let it evolve on its own.</p>\n\n\n\n<p>But here’s the kicker: Culture exists whether or not you pay attention to it.&nbsp;</p>\n\n\n\n<p>If you ignore your company culture, it will evolve on its own. You’ll miss out on an opportunity to harness it to empower employees to deliver on your brand promise. Even worse, you’ll risk it becoming your biggest liability and driving your brand into the ground.</p>\n\n\n\n<p>Simply put, your brand is your culture, and your culture is your brand.</p>\n\n\n\n<h2>How to Get Employees to Behave On-Brand</h2>\n\n\n\n<p>The best brands lead with culture in everything they do. They infuse it into their internal operations, hiring practices, benefits packages, and more. In doing so, they turn every employee touchpoint into an opportunity to reflect the brand at its best.</p>\n\n\n\n<p>This immerses team members into the company culture.&nbsp;</p>\n\n\n\n<p>And it’s a foolproof strategy because that culture is the key to shaping employee decisions and actions to consistently deliver on the brand promise to customers.</p>\n\n\n\n<p>Your culture shapes how your staff members behave and engage with customers.</p>\n\n\n\n<h2>Build a Brand Culture That Keeps Your Promise</h2>\n\n\n\n<p>So is your company culture producing the right behaviors in your team?&nbsp;</p>\n\n\n\n<p>Is it leading them to offer a brilliant product or service?</p>\n\n\n\n<p>If not, it’s time to start reining in your company culture and redesigning it so that it sets up your team to authentically represent your brand to the world.&nbsp;</p>\n\n\n\n<p>Only then will your brand be able to consistently deliver on your promise and turn your customers into raving fans.</p>\n\n\n\n<h3><strong>Ready to cultivate a culture that makes your brand stand out from the competition?&nbsp;</strong></h3>\n\n\n\n<p>Read how to get started with <a href=\"https://historicagency.com/how-a-marquee-culture-keeps-your-brand-ahead-of-the-pack/\" data-type=\"URL\" data-id=\"https://historicagency.com/how-a-marquee-culture-keeps-your-brand-ahead-of-the-pack/\">the Marquee Culture method</a>.</p>\n","protected":false},"excerpt":{"rendered":"<p>How to cultivate a culture to turn your employees into brilliant brand advocates, attract more customers, and outpace the competition.</p>\n","protected":false},"author":15,"featured_media":3692,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"post-tag":[],"_links":{"self":[{"href":"https://historicagency.com/wp-json/wp/v2/posts/3675"}],"collection":[{"href":"https://historicagency.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://historicagency.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/users/15"}],"replies":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/comments?post=3675"}],"version-history":[{"count":0,"href":"https://historicagency.com/wp-json/wp/v2/posts/3675/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/media/3692"}],"wp:attachment":[{"href":"https://historicagency.com/wp-json/wp/v2/media?parent=3675"}],"wp:term":[{"taxonomy":"post-tag","embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/post-tag?post=3675"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3647,"date":"2021-07-27T09:00:00","date_gmt":"2021-07-27T16:00:00","guid":{"rendered":"https://historicagency.com/?p=3647"},"modified":"2021-07-26T18:44:06","modified_gmt":"2021-07-27T01:44:06","slug":"5-copywriting-mistakes-that-are-killing-your-small-business","status":"publish","type":"post","link":"https://historicagency.com/5-copywriting-mistakes-that-are-killing-your-small-business/","title":{"rendered":"5 Copywriting Mistakes That Are Killing Your Small Business"},"content":{"rendered":"\n<p>Good copywriting packs a powerful punch.&nbsp;</p>\n\n\n\n<p>From ads to social posts, web copy, and email subject lines, effective sales copy grabs your audience and turns them into loyal fans.</p>\n\n\n\n<p>But if you’re not wording your message right, you won’t attract the customers your small business needs. And you’ll keep struggling to convert leads into sales.&nbsp;</p>\n\n\n\n<p>So is your copywriting making the cut?</p>\n\n\n\n<p>Read on to discover 5 copywriting mistakes that could be killing your small business. Then start mastering these quick tips to craft copy that sells.</p>\n\n\n\n<h2>Mistake #1: You try to be clever instead of clear.</h2>\n\n\n\n<p>Cleverness in copywriting doesn’t work.</p>\n\n\n\n<p>Why?&nbsp;</p>\n\n\n\n<p>Because clever copy confuses people. It forces readers to stop in their tracks and try to understand what you’re saying.&nbsp;</p>\n\n\n\n<p>In other words, clever writing wastes your prospects’ time.&nbsp;</p>\n\n\n\n<p>You only have a couple of sentences to convince people that your product or service is the best solution. Don’t waste those precious seconds on clever words that create confusion. Because if you confuse them, you’ll lose them.</p>\n\n\n\n<h4>Copywriting Tip: Make your message instantly clear. </h4>\n\n\n\n<p>Throw out your attempts to be clever and witty. Make sure your copy communicates your message in the clearest way possible. If something isn’t instantly clear, chop it out. Clarity always beats cleverness in sales copy.</p>\n\n\n\n<h2>Mistake #2: You don’t address what your audience cares about.&nbsp;</h2>\n\n\n\n<p>Some businesses use copy that is downright self-obsessed. Their writing oozes with <em>us</em>, <em>we</em>, and <em>our</em>.</p>\n\n\n\n<p>Your prospects don’t care about you and your small business.</p>\n\n\n\n<p>They want to know how your product or service is going to improve their lives—how it will save them time or money, make them more popular, or help them feel less stressed. They’re asking, “What’s in it for me?”</p>\n\n\n\n<p>Your copy needs to answer that question. How? By highlighting benefits.</p>\n\n\n\n<p>Benefits show how your product can make a prospect’s life better. Benefits trigger an emotional response by describing a more desirable outcome.</p>\n\n\n\n<h4>Copywriting Tip: Lay out the problems your product/service solves.</h4>\n\n\n\n<p>Tell your prospects how your product or service will tangibly improve their lives and solve their problems, such as saving them hours of work so they can spend more time with their family.</p>\n\n\n\n<h2>Mistake #3: You’ve over-polished your copy.&nbsp;</h2>\n\n\n\n<p>Don’t approach copywriting like an English class assignment. If you try to perfect your writing, it can end up feeling stiff and formal.&nbsp;</p>\n\n\n\n<p>Your copy should sound natural, like a conversation with a friend. Be personable. Ask questions. Show empathy. This sets a tone that feels familiar, inviting, and appealing.&nbsp;</p>\n\n\n\n<p>Let your prospects feel like you’re a well-meaning friend who wants to help them solve a problem.</p>\n\n\n\n<h4>Copywriting Tip: Be conversational to connect with your audience. </h4>\n\n\n\n<p>“You” is one of the most powerful words in the English language. Use it throughout your copy to address your audience directly, build a conversation, and create a sense of connection.</p>\n\n\n\n<p><strong>Bonus Tip</strong>: As you work out your copy, imagine you’re speaking to one person, not a crowd of people. Remember that your prospects care about one thing: “What’s in it for <strong>me</strong>?”</p>\n\n\n\n<h2>Mistake #4: Your copy’s structure is too hard to read.</h2>\n\n\n\n<p>Most people have short attention spans and limited time. They don’t have the patience to navigate something that’s difficult to read. If your writing takes effort to read, they’ll simply disengage and move on.</p>\n\n\n\n<p>So what makes copy hard to read?</p>\n\n\n\n<ul><li>Big words</li><li>Long sentences</li><li>Bloated paragraphs</li></ul>\n\n\n\n<p>This doesn’t mean your copy always has to be short. It simply needs to move your prospects quickly and easily to the end.&nbsp;</p>\n\n\n\n<h4>Copywriting Tip: Chop up your copy.</h4>\n\n\n\n<p>Here’s how to structure your writing to keep your audience engaged:</p>\n\n\n\n<ul><li>Use bullets</li><li>Break up long sentences</li><li>Keep paragraphs to 1–3 sentences</li><li>Vary your sentence structures</li><li>Embrace white space</li></ul>\n\n\n\n<p>These tactics will help people scan your copy, understand your offering, and decide to take action.</p>\n\n\n\n<h2>Mistake #5: You don’t have a clear call-to-action. </h2>\n\n\n\n<p>Let’s say you’ve primed your audience with persuasive and compelling copy. They’re convinced that your product or service is the solution to their problem. Now they’re ready to act.</p>\n\n\n\n<p>If you don’t seal the deal by giving them a focused call-to-action, then you’ve just wasted your efforts.</p>\n\n\n\n<p>People want you to tell them what to do. Help them take the next step that will get them closer to receiving the desirable benefit you offer. How? By giving them a powerful, straightforward call-to-action. </p>\n\n\n\n<p>The call-to-action you choose for a particular piece of copy depends on where your target audience is at in your customer journey. Calls-to-action often encourage prospects to learn more, subscribe, get an exclusive discount, pick up the phone, or buy now.</p>\n\n\n\n<h4>Copywriting Tip: Choose one call-to-action.</h4>\n\n\n\n<p>For each piece of copy, choose the single most important action you want the prospect to take right now.&nbsp;</p>\n\n\n\n<p>Let’s repeat that: Choose one call-to-action. </p>\n\n\n\n<p>Otherwise, you demand readers to make the choice. And in a world of decision fatigue, they might just opt out and abandon your offer altogether.</p>\n\n\n\n<div style=\"height:17px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div>\n\n\n\n<p>So, there you have it: top tips to overcoming 5 common copywriting mistakes.</p>\n\n\n\n<p>Start putting your know-how into practice, and watch your prospects turn into loyal customers and raving fans!</p>\n\n\n\n<p><a href=\"https://historicagency.com/contact/\">Get in touch with us</a> for more direction on how to write compelling copy for your brand.</p>\n","protected":false},"excerpt":{"rendered":"<p>To attract a tribe of loyal customers, you need good copywriting. But is your copy hitting the mark? Stop committing these 5 mistakes and get quick tips for writing copy that sells.</p>\n","protected":false},"author":15,"featured_media":3662,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"post-tag":[],"_links":{"self":[{"href":"https://historicagency.com/wp-json/wp/v2/posts/3647"}],"collection":[{"href":"https://historicagency.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://historicagency.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/users/15"}],"replies":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/comments?post=3647"}],"version-history":[{"count":0,"href":"https://historicagency.com/wp-json/wp/v2/posts/3647/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/media/3662"}],"wp:attachment":[{"href":"https://historicagency.com/wp-json/wp/v2/media?parent=3647"}],"wp:term":[{"taxonomy":"post-tag","embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/post-tag?post=3647"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3166,"date":"2021-03-30T07:00:00","date_gmt":"2021-03-30T14:00:00","guid":{"rendered":"https://historicagency.com/?p=3166"},"modified":"2021-03-15T16:40:19","modified_gmt":"2021-03-15T23:40:19","slug":"4-tips-for-leveraging-social-media-for-brand-campaigns","status":"publish","type":"post","link":"https://historicagency.com/4-tips-for-leveraging-social-media-for-brand-campaigns/","title":{"rendered":"4 Tips for Leveraging Social Media for Brand Campaigns"},"content":{"rendered":"\n<p>Social media initially started as a way to make connecting with friends easier and has since grown into a tool for growing businesses, connecting nonprofits with donors, and helping churches reach new and existing members. Beyond that, social media is also a great way to develop authentic relationships with your audience, build loyal advocates that will stand by your brand for years to come, and spark conversation that leads to incredible life change.</p>\n\n\n\n<p>Whether you’re launching a new product, communicating updated service times, or sharing your thoughts on an important cultural moment, social media provides a multitude of opportunities to find and engage with your target audience. It’s also the perfect place to roll out new ideas and help them gain traction.&nbsp;</p>\n\n\n\n<p>Here are a few of our top tips when it comes to leveraging social media for your brand campaigns.</p>\n\n\n\n<h2>Showcase Your Values.</h2>\n\n\n\n<p>Social media is an extension of your brand. That’s why it’s critical that you use your brand’s values to inform and guide your social content. Here are some questions to consider when evaluating your existing social platforms:</p>\n\n\n\n<ul><li>Is your organization’s mission/vision clearly articulated through the content you post?</li><li>Do your posts reflect your brand’s voice and tone?</li><li>Can you tell what your brand values are?</li></ul>\n\n\n\n<p>Showcasing your organization’s values on social media will help your audience connect with you, give them an idea of what you stand for, and determine whether that aligns with their own values. This is especially important if this is one of their first touchpoints with your brand. As you share your values, you should provide opportunities for your followers to participate and join in on the conversation as well.</p>\n\n\n\n<p>When launching new brand campaigns, make sure all the graphics and content align with who you are as a brand to ensure cohesiveness across channels and platforms.</p>\n\n\n\n<h2>Engage With Your Audience.</h2>\n\n\n\n<p>Positive interactions and conversations with your social media followers are key to shifting them from simply being spectators to becoming loyal brand advocates. Some easy ways to engage with your audience include:</p>\n\n\n\n<ul><li>Following back people who follow you.</li><li>Liking and commenting on your follower’s posts with thoughtful responses that are open-ended and prompt them to respond back.</li><li>Sending DMs to specific followers.</li><li>Posting questions or requesting feedback through surveys/polls (this could include asking followers about their experience with your products/services, potential pain points, etc.). An easy way to do this is by using the Instagram Stories poll sticker or question sticker, then sharing the results with your followers.</li><li>Sharing user-posted content to show that you appreciate their support and that interactions go both ways.</li></ul>\n\n\n\n<p>Remember that social media is not a one-way conversation. Your followers want to engage and interact with you rather than simply being fed content. When considering how to leverage social media for your next brand campaign, remember to include an element of engagement that will draw users in (and make sure you respond back as well!).&nbsp;</p>\n\n\n\n<h2>Go Live Often.</h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1200\" height=\"800\" src=\"https://historicagency.com/wp-content/uploads/Go-Live-on-Social-Media-1200x800.jpg\" alt=\"\" class=\"wp-image-3172\"/><figcaption>Photo by @joshsrose on Unsplash</figcaption></figure>\n\n\n\n<p>In 2020, many organizations used live-streaming as a way to stay connected with their audiences. This was true for many churches who started live streaming their services to continue to stay connected with their congregations. The increasing trend toward live-streaming in the past year shows no signs of slowing down and will likely remain popular in 2021 and beyond.</p>\n\n\n\n<p>It can be intimidating to have the confidence to go live, but it’s possible to be yourself and still connect with your audience effectively by:</p>\n\n\n\n<ul><li>Keeping followers aware of the live-stream schedule so they can be ready to tune in.</li><li>Customizing live content to fit the needs and interests of your specific audience. For example, if you own a gardening shop, it might be valuable to do a live tutorial showing people how to build a flower bed.</li><li>Inviting special guests or followers who are watching your live stream to participate by adding them to your live broadcast through the app’s guest features.</li><li>Practicing what you’re going to present or explain before actually going live.</li></ul>\n\n\n\n<p>Facetime builds authenticity, and authenticity builds trust in your brand. According to a <a href=\"https://www.edelman.com/research/brand-trust-2020\">2020 report by Edelman</a>, 60% of customers are more willing to share their personal information with a brand they trust, 75% will likely continue to purchase from you, and 78% may encourage others to support your brand. That makes live streams a great way to add value to your audience and include a more personal element in your brand campaigns.&nbsp;</p>\n\n\n\n<h2>Be Creative.</h2>\n\n\n\n<p>Relatable content invites followers to engage with your brand by commenting on posts and stories and sharing or mentioning your content on their own pages.</p>\n\n\n\n<p>Creative content is the <a href=\"https://sproutsocial.com/insights/social-data-for-business-growth/\">number one reason</a> a brand&#8217;s social media presence stands out. Here are some ideas you can use in your brand campaigns to help you reach people creatively:</p>\n\n\n\n<ul><li>Giphy stickers. It’s fairly easy to create a Giphy account and use your own photos to make stickers.</li><li>Look into creating Augmented Reality (AR) filters for your brand. These filters are similar to Virtual Reality but only require a smartphone. According to <a href=\"https://sproutsocial.com/insights/social-media-trends/\">Sprout Social</a>, &#8220;Augmented reality experiences are inherently interactive and highly effective for engagement.&#8221;</li><li>Utilize Instagram and Facebook story features to make surveys and ask your viewers questions.</li></ul>\n\n\n\n<p>Having these different types of sharable content equips your followers to become brand advocates rather than simply spectators. It also helps your brand reach further as your followers begin to use and share the elements you create with their friends and across their own social media channels.</p>\n\n\n\n<h2>The Takeaway</h2>\n\n\n\n<p>When you use social media as a way to showcase your values, engage with your followers, and be creative, it can serve as a great tool to support your brand campaigns. Not only that, but it’ll help you connect with your audience and ultimately increase your brand’s reach and impact!</p>\n","protected":false},"excerpt":{"rendered":"<p>Social media is the perfect place to roll out new ideas and help them gain traction. Here are a few of our top tips when it comes to leveraging social media for your brand campaigns.</p>\n","protected":false},"author":9,"featured_media":3169,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"post-tag":[14],"_links":{"self":[{"href":"https://historicagency.com/wp-json/wp/v2/posts/3166"}],"collection":[{"href":"https://historicagency.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://historicagency.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/users/9"}],"replies":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/comments?post=3166"}],"version-history":[{"count":0,"href":"https://historicagency.com/wp-json/wp/v2/posts/3166/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/media/3169"}],"wp:attachment":[{"href":"https://historicagency.com/wp-json/wp/v2/media?parent=3166"}],"wp:term":[{"taxonomy":"post-tag","embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/post-tag?post=3166"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3180,"date":"2021-03-23T07:00:00","date_gmt":"2021-03-23T14:00:00","guid":{"rendered":"https://historicagency.com/?p=3180"},"modified":"2021-05-11T15:30:14","modified_gmt":"2021-05-11T22:30:14","slug":"know-your-audience-how-to-gather-and-translate-customer-feedback","status":"publish","type":"post","link":"https://historicagency.com/know-your-audience-how-to-gather-and-translate-customer-feedback/","title":{"rendered":"Know Your Audience: How to Gather and Translate Customer Feedback"},"content":{"rendered":"\n<p>New ideas are powerful—but it’s not enough to just keep dreaming them up.&nbsp;</p>\n\n\n\n<p>Your latest lightbulb moment could be about monetizing a new concept, or maybe you’ve got a design tweak you’re crazy about. But do your brainwaves resonate with your audience’s needs and preferences?&nbsp;</p>\n\n\n\n<p>No matter your goal, nothing gives an idea wings like your target audience’s opinion.&nbsp;</p>\n\n\n\n<p>By measuring their acceptance of a new idea, you get the validation to push full-steam-ahead—or the vital chance to pivot away from a costly mistake. But it goes far beyond that. The reality is that in today’s day and age, people choose businesses and organizations that align with and show an understanding of their personal priorities and values.&nbsp;</p>\n\n\n\n<p>So, how do you find out what those priorities and values are? You simply ask.</p>\n\n\n\n<h2>The Power of Quick Online Surveys</h2>\n\n\n\n<p>Getting to know your audience better takes the guesswork out of meeting their needs. The more you know about them, the better you can exceed expectations throughout the entire customer journey.&nbsp;</p>\n\n\n\n<p>This means you’re able to facilitate:</p>\n\n\n\n<ul><li>Messaging adapted to deliver the right information</li><li>Friction-free engagement</li><li>Branding that voices how your values match theirs</li></ul>\n\n\n\n<p>You can’t keep your finger on this pulse with an annual survey alone. Markets change faster than that—and your current customers are likely only a part of the audience you aim to serve.&nbsp;</p>\n\n\n\n<p>Instead, try sourcing quick, consistent feedback, which welcomes your ideal customers right into the brainstorming process, giving them a direct stake in what you have to offer. This will give you a real-time understanding of what matters to them, guiding which ideas perform best for your business and where there’s an opportunity for growth.</p>\n\n\n\n<h2>Setting Up Your Surveys</h2>\n\n\n\n<p>The beauty of quick online surveys is that every batch of questions you create gets straight to the point. It’s easier to ensure that each survey serves a clear objective, so feedback is specific to your goal.&nbsp;</p>\n\n\n\n<p>To get actionable responses, you’ve got to first decide on a survey’s goal. Then clarify what you want to know with questions that:</p>\n\n\n\n<ul><li>Use simple language</li><li>Don’t squeeze multiple questions into one</li><li>Are neutral, not guiding toward a desired answer</li></ul>\n\n\n\n<p>Some ideas do require a bit more digging into your audience’s psyche, however. That’s the value of questions asking for an open-ended response or using a sentiment-based scale. But the challenge many organizations run into is how to actually make sense of what value lies within a set of answers.&nbsp;</p>\n\n\n\n<h2>Translating Customer Feedback</h2>\n\n\n\n<p>Customer feedback can be translated in multiple ways based on the medium you use to gather information.</p>\n\n\n\n<p><strong>Keywords &amp; Sentiments</strong></p>\n\n\n\n<p>One way to translate traditional survey feedback is by analyzing specific keywords and sentiments from the written responses you receive.</p>\n\n\n\n<p>For example, <a href=\"https://www.surveymonkey.com/\">SurveyMonkey</a> provides a word cloud as a visual representation of the most commonly used words and phrases in open-ended responses. They also allow you to see all the responses associated with a specific word, how many times it was mentioned, and the percentage of responses the word or phrase was found in. This information helps you visualize what’s most important to your audience based on the questions asked in the survey.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"724\" height=\"160\" src=\"https://historicagency.com/wp-content/uploads/SurveyMonkey-Word-Cloud.png\" alt=\"\" class=\"wp-image-3182\"/><figcaption>Image Source: SurveyMonkey</figcaption></figure>\n\n\n\n<p><strong>Recorded Behavior</strong></p>\n\n\n\n<p>If you’re analyzing survey results or recorded behavior through audio, video, or by tracking website activity, translating feedback looks a bit different, but can prove to be even more valuable.</p>\n\n\n\n<p><a href=\"https://www.videoask.com/\">VideoAsk</a> is a helpful tool for interacting with your audience face-to-face, getting direct feedback, and building stronger relationships. Customers can respond to questions you ask with video, audio, text, and multiple choice. Audio and visual cues will oftentimes offer you much more information than a traditional survey, which could be helpful if you’re trying to identify customer pain points and product/service wins.</p>\n\n\n\n<p>Additionally, screen recording and tracking services like <a href=\"https://www.hotjar.com/\">Hotjar</a> and <a href=\"https://www.crazyegg.com/\">Crazy Egg</a> can be helpful in determining where users are scrolling on your website, the links they’re clicking on, and the general areas they’re spending the most time reviewing. You’ll get a better understanding of the customer journey through A/B testing, recordings of visitor behavior, surveys that pinpoint specific user actions, and heatmaps of where people are clicking, moving, and scrolling.</p>\n\n\n\n<p>These tools will help you track how users are really experiencing your site and if they’re finding the things they’re looking for. With this valuable feedback, you can make adjustments to improve the navigation, flow, and placement of content and graphics.</p>\n\n\n\n<p><strong>Keep in mind that some survey responses may be outliers</strong>—extreme answers on either end of the spectrum that don’t correlate with the rest of the feedback you receive. While these answers may still offer valuable feedback, you’ll want to exclude them when doing your analysis so they don’t skew your overall results.</p>\n\n\n\n<h2>Getting to the Core of What Your Customers Are Thinking</h2>\n\n\n\n<p>In the process of gathering customer feedback, it’s easy to just get surface-level answers. But how do you get to the core of what your customers are thinking? Try employing the 5 Whys.</p>\n\n\n\n<p>The <a href=\"https://buffer.com/resources/5-whys-process/\">5 Whys technique</a> is the process of asking “Why?” 5 times to get to the root of what the actual issue is. The technique was originally developed by Sakichi Toyoda, the founder of Toyota Industries, but today is used across a variety of different industries to help solve problems whose root cause may not be what it initially seems.</p>\n\n\n\n<p>Here’s how it works:</p>\n\n\n\n<ul><li>Identify the problem you’re trying to solve.</li><li>Determine the cause of the problem by asking, “Why did this happen?”</li><li>Ask “Why?” in reference to each previous cause that’s identified (at least 4 more times) until you’re able to identify a root cause that makes logical sense.</li><li>Come up with solutions that could help resolve the root cause.</li></ul>\n\n\n\n<p>The 5 Whys method is especially helpful when conducting in-person surveys. You can write the main problem on a whiteboard, then go down the line and get feedback on each “Why?” until you ultimately arrive at the core issue. Your team can then start coming up with possible solutions that address this root problem.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p></p>\n\n\n\n<p>Gathering customer data and receiving feedback in general will help you inject compassion for your customers into everything you produce. As a result, your decisions will reflect your audience’s priorities and preferences, while speaking a language that connects them to your mission and brand.</p>\n\n\n\n<p>While surveys make it easy for your audience to provide feedback on the products and services you provide, the real magic starts when you put this feedback into action. <a href=\"https://historicagency.com/contact/\">Get in touch with us</a> for more direction on how to infuse your organization with this human-centered approach that will help you fill gaps, build viable concepts, and drive your vision forward.</p>\n","protected":false},"excerpt":{"rendered":"<p>Getting to know your audience better takes the guesswork out of meeting their needs. Here are some simple ways to gather, translate, and apply feedback so you can better connect with your customers. </p>\n","protected":false},"author":14,"featured_media":3188,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"post-tag":[14],"_links":{"self":[{"href":"https://historicagency.com/wp-json/wp/v2/posts/3180"}],"collection":[{"href":"https://historicagency.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://historicagency.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/users/14"}],"replies":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/comments?post=3180"}],"version-history":[{"count":0,"href":"https://historicagency.com/wp-json/wp/v2/posts/3180/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/media/3188"}],"wp:attachment":[{"href":"https://historicagency.com/wp-json/wp/v2/media?parent=3180"}],"wp:term":[{"taxonomy":"post-tag","embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/post-tag?post=3180"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3154,"date":"2021-03-16T07:00:00","date_gmt":"2021-03-16T14:00:00","guid":{"rendered":"https://historicagency.com/?p=3154"},"modified":"2021-03-15T13:32:26","modified_gmt":"2021-03-15T20:32:26","slug":"how-to-brand-your-nonfiction-book","status":"publish","type":"post","link":"https://historicagency.com/how-to-brand-your-nonfiction-book/","title":{"rendered":"How to Brand Your Nonfiction Book"},"content":{"rendered":"\n<p>Writing a book is a labor of love. Emphasis on <em>labor</em>. You’ve put so much time and energy into it with the hopes that it’ll ultimately help you further the goals of your organization.</p>\n\n\n\n<p>We get it. Success in publishing can be tricky. It isn&#8217;t enough to want to make the world a better place—you need momentum, and that&#8217;s where your brand comes in.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"1200\" src=\"https://historicagency.com/wp-content/uploads/Branding-Your-Nonfiction-Book-2-1-800x1200.jpg\" alt=\"Man Reading Book at Train Station\" class=\"wp-image-3160\" srcset=\"https://historicagency.com/wp-content/uploads/Branding-Your-Nonfiction-Book-2-1-800x1200.jpg 800w, https://historicagency.com/wp-content/uploads/Branding-Your-Nonfiction-Book-2-1-1600x2400.jpg 1600w, https://historicagency.com/wp-content/uploads/Branding-Your-Nonfiction-Book-2-1.jpg 1707w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Photo by @kiyun911 on Unsplash</figcaption></figure>\n\n\n\n<h2>How Does My Brand Influence Marketing My Book?</h2>\n\n\n\n<p><a href=\"https://historicagency.com/the-5-pillars-of-brand/\">At Historic, we believe that your brand is the sum total of your culture, story, customer experience, and identity.</a> Your brand is your reputation, and an essential tool for success. Think of any huge corporation, from Starbucks to Apple to Walmart. Everyone has an opinion of these companies, whether good or bad, and <a href=\"https://www.forbes.com/sites/forbesagencycouncil/2019/12/27/the-importance-of-brand-reputation-20-years-to-build-five-minutes-to-ruin/#1980f2fb2e69\">those opinions can either help or hurt the company</a>.&nbsp;</p>\n\n\n\n<p>The same is true when you&#8217;re marketing your book. Whether you self-publish or have a whole PR team behind you, the goal is the same: to make your current and future audience care about what you have to say enough to make them want to buy what you write. Your organization depends on these goals too, and your book is an extension of that. You want to be relatable, trustworthy, and interesting to your audience, which is why it’s important to let your brand represent you everywhere, from the book’s cover to your social media to your website.&nbsp;</p>\n\n\n\n<h2>Book Branding Strategies</h2>\n\n\n\n<p>So, how exactly do you form your book’s brand? Here are some important things to consider.</p>\n\n\n\n<ul><li><strong>What Makes You an Expert:</strong> Your convictions, knowledge, and experience are unique to you, and your brand should reflect that. Once you define what makes you an expert, your audience will trust your authority.</li></ul>\n\n\n\n<ul><li><strong>Your Aesthetic Style:</strong> People are visual; anyone who sees your book will form an initial impression, for better or for worse. Your choice of colors, fonts, and images should set a specific tone that matches what the book is about. It’s also important to use a unified style on the book jacket, social media cover images and posts, digital ads, website, and any printed materials to provide subtle cues that help people connect the book visually across platforms. Make sure your aesthetic style matches the message in your book and that all of your communication channels are unified in that message.&nbsp;</li></ul>\n\n\n\n<ul><li><strong>Voice and Tone:</strong> Your book’s voice and tone should match or in some way be connected to how you communicate on social media, your website, and emails. Additionally, people reading your book will want to connect with you personally. Provide opportunities for readers to reach out through the ways you communicate on other channels outside your book.&nbsp;</li></ul>\n\n\n\n<ul><li><strong>Book Cover:</strong> There’s a lot of information out there about cover design. It all ultimately boils down to this: be sure to stand out from the crowd, but also be clear at the same time. Remember that your book’s design will inform other products, services, and marketing/communication channels, so it’s important that it fits within your particular aesthetic style.&nbsp;</li></ul>\n\n\n\n<ul><li><strong>Headshot: </strong>Your readers will crave a personal connection with you. A picture is essential for your book jacket and biography, but one isn’t enough in the digital age. Plan on doing multiple photoshoots for social media and other marketing efforts. Showcase your personality and what makes you an expert in these photos.&nbsp;</li></ul>\n\n\n\n<ul><li><strong>Media Kit: </strong>As an author, you’ll need a press kit for anyone reviewing or talking about your book. This includes information about you like your bio, headshot, a press release, short synopsis of your book, and your contact information. Sample questions are also great to include. Your media kit should be available online or as a downloadable PDF.</li></ul>\n\n\n\n<ul><li><strong>Cross-Platform Campaigns: </strong>You want your target audience to be able to find your book no matter where they might be. That’s why <a href=\"https://historicagency.com/turning-your-book-into-a-platform/\">a multi-channel campaign is essential</a> for momentum and creating the widest reach. We recommend marketing your book through emails, digital ads, a dedicated website, social media, and direct mail. Your book’s website should focus on users taking action—pre-ordering your book, signing on for updates, joining a launch team, or connecting with you on social media. These actions create connections and help generate buzz for your book.&nbsp;</li></ul>\n\n\n\n<p>Thinking about all the aspects of branding can seem complicated, but in the long run, they’re essential for creating loyal customers that’ll want to read everything you write. Your reputation as an author is what will ultimately make you successful, so spending time on branding your book is something that can&#8217;t be glossed over.</p>\n","protected":false},"excerpt":{"rendered":"<p>Brand is essential to building momentum for your new book. Here are our top tips and strategies when it comes to branding your nonfiction book!</p>\n","protected":false},"author":1,"featured_media":3157,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"post-tag":[15],"_links":{"self":[{"href":"https://historicagency.com/wp-json/wp/v2/posts/3154"}],"collection":[{"href":"https://historicagency.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://historicagency.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/comments?post=3154"}],"version-history":[{"count":0,"href":"https://historicagency.com/wp-json/wp/v2/posts/3154/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/media/3157"}],"wp:attachment":[{"href":"https://historicagency.com/wp-json/wp/v2/media?parent=3154"}],"wp:term":[{"taxonomy":"post-tag","embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/post-tag?post=3154"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":2997,"date":"2021-02-25T07:00:00","date_gmt":"2021-02-25T14:00:00","guid":{"rendered":"https://historicagency.com/?p=2997"},"modified":"2021-02-24T14:40:13","modified_gmt":"2021-02-24T21:40:13","slug":"increasing-your-ability-for-agility-4-lessons-from-leaders-in-the-field-of-technology","status":"publish","type":"post","link":"https://historicagency.com/increasing-your-ability-for-agility-4-lessons-from-leaders-in-the-field-of-technology/","title":{"rendered":"Increasing Your Ability for Agility: 4 Lessons From Leaders in the Field of Technology"},"content":{"rendered":"\n<p>“Agility” is not typically a word you’ll find among the corporate values hanging within frames on the walls of an institution like a church or a school. In fact, in all my years of consulting with churches, nonprofits, and schools, I have yet to see it on any list of values. If anything, some of these values actually imply the opposite of agility!</p>\n\n\n\n<p>The bottom line is—institutions were not designed for agility. Instead, they are established to uphold a set of traditions or principles. A quick glance at an institution’s charting documents and you’ll see language that defines their convictions/beliefs but very little as it relates to managing change—much less charting a course into new territory! Change in these organizations usually happens slowly, over time, and often with great consternation.&nbsp;</p>\n\n\n\n<p>If 2020 taught those of us in leadership anything at all, it’s the immense value of agility! Take the most often repeated phrase of 2020 for example—pivot. That word, pivot, is a metaphor used to describe a quick change in direction or shifting momentum toward a new target.&nbsp;</p>\n\n\n\n<p><strong>Innovation will not wait for us to feel comfortable with what needs to change!</strong></p>\n\n\n\n<p>Today, organizations of every size are demanding a quicker (and better) response to change. So, what can leaders of churches, nonprofits, and schools do to increase organizational agility in the days ahead?&nbsp;</p>\n\n\n\n<p>One of the unique opportunities I have in my work for Slingshot Group is meeting and interacting with leaders from a variety of backgrounds with diverse sets of experiences, skills, and talents. In recent years, I’ve been exposed to and learned from some truly remarkable leaders in the field of technology.&nbsp;</p>\n\n\n\n<p>Unsurprisingly, those who work in tech not only embrace change more readily, they count on it as a part of the challenge they were hired to meet. Adaptability and agility don’t necessarily come more naturally for these people, however. To overcome the obstacles associated with leading change, leaders in the field of technology often organize themselves in a system called “Scrum” and subsequently do their work for the organization as a part of a “Scrum Team.”</p>\n\n\n\n<p>As much as this will pain some leaders to learn, “Scrum,” is not an acronym, but rather a framework that allows teams to work together with greater agility. The term was first used in 1986, but over time, the outstanding performance achieved by software development teams who followed its principles forever solidified “Scrum” as the go-to method for organizing small teams around quantifiable objectives.&nbsp;</p>\n\n\n\n<p>Here are four things leaders in any organization can learn from the “Scrum” method when it comes to solving problems and creating lasting change where it counts:</p>\n\n\n\n<h2><strong>1) Deploy small teams of skilled individuals to solve problems incrementally.</strong></h2>\n\n\n\n<p><strong>“</strong>Scrum” pairs groups of people who collectively have all the skills and expertise to do important work and share or acquire such skills as needed to meet team objectives. “Scrum Teams” operate within a framework that helps them work together in an agile way on product development.</p>\n\n\n\n<p><em>“The fundamental unit of Scrum is a small team of people, a Scrum Team. Within a Scrum Team, there are no sub-teams or hierarchies. It is a cohesive unit of professionals focused on one objective at a time, the goal.”</em><strong><em><sup>*</sup></em></strong></p>\n\n\n\n<p>Notice…there are no hierarchies on a Scrum Team. For all intents and purposes, Scrum Teams are rather flat in their structure, instead of tall. Not only does this create less friction in the creative problem-solving stage of the work, but it also frees everyone up to let the best idea win.</p>\n\n\n\n<p>By now, you’re probably asking<em>, “</em>So in the absence of ‘bosses’ and hierarchies, what or who holds them accountable?”</p>\n\n\n\n<h2><strong>2) Personal autonomy rooted in a do-or-die commitment to team values.&nbsp;</strong></h2>\n\n\n\n<p>If people on the team don’t share an equal commitment to the same values, everything starts to break down on a Scrum Team. Scrum only works when personal autonomy (self-governance) is exercised for the good of the team toward a shared goal.&nbsp;</p>\n\n\n\n<p><em>Successful Scrum Teams depend on each individual becoming more proficient in living out these five values:</em><strong><em><sup>*</sup></em></strong></p>\n\n\n\n<ul><li><strong><em>Commitment</em></strong></li><li><strong><em>Focus</em></strong></li><li><strong><em>Openness</em></strong></li><li><strong><em>Respect</em></strong></li><li><strong><em>Courage&nbsp;</em></strong></li></ul>\n\n\n\n<p>The Scrum Team works because accountability is baked into the system. Everyone on a Scrum Team commits to achieving their goals and to supporting each other along the way. The Scrum Team and its members are open with each other about the work, progress, and challenges encountered at every turn.</p>\n\n\n\n<p>Scrum Teams work because members expect each other to be capable, independent people, and are respected as such by the people with whom they work. The Scrum Team members have the courage to do the right thing, to work on tough problems, and to hold each other accountable for work accomplished.</p>\n\n\n\n<h2><strong>3) Good ideas are turned into actionable steps through short bursts of effort.</strong></h2>\n\n\n\n<p>Scrum Teams improve things incrementally through events called, “Sprints.” Simply put, a Sprint is where an idea is turned into action. The Sprint is a fixed length amount of time (usually a month). Individuals on Scrum Teams primarily focus on the work of the Sprint to make the best possible progress toward larger team goals.</p>\n\n\n\n<p><em>“When a Sprint’s horizon is too long the Sprint Goal may become invalid, complexity may rise, and risk may increase. Shorter Sprints can be employed to generate more learning. Each Sprint may be considered a short project.”</em><strong><em><sup>*</sup></em></strong></p>\n\n\n\n<p>A couple of important things to note about a Sprint:</p>\n\n\n\n<ul><li>No changes are made during the Sprint that would endanger the Sprint Goal.</li><li>The quality of other work/projects does not decrease during the Sprint.</li><li>Sprints invite a feedback loop for adaptation and review of the larger goal at least every calendar month.&nbsp;</li></ul>\n\n\n\n<h2><strong>4) Define the meaning of “done.”</strong></h2>\n\n\n\n<p>On Scrum Teams, everyone agrees to not only work together on finding a solution to a problem, but also mutually defining and committing to the same Definition of Done.&nbsp;</p>\n\n\n\n<p><em>“The Definition of Done creates transparency by providing everyone a shared understanding of what work was completed.”</em><strong><em><sup>*</sup></em></strong></p>\n\n\n\n<p>Depending on where you find yourself leading today, defining “done” may be challenging to measure. If you work in a charitable organization, for instance, you understand that your work is never actually finished! However, the “product” you need to deploy could be a new program or class you’d like to offer.&nbsp;</p>\n\n\n\n<p>When it comes to “defining done,” have your team make a list of all the incremental activities needed to achieve the “done” state by the end of the Sprint. By “defining done,” you’ll ensure mutual accountability on your teams while increasing the quality of your products and services.&nbsp;</p>\n\n\n\n<p>Ultimately, the goal of “Scrum” is to help teams increase productivity, add value, foster creativity, and deliver satisfaction to your customer, client, or congregant. With these principles in mind, leaders in even the most change-resistant organization today can enjoy the benefits and breakthrough that comes with them!&nbsp;</p>\n\n\n\n<p><sup>*</sup>From “The Scrum Guide: The Definitive Guide to Scrum: The Rules of the Game” <a href=\"https://www.scrumguides.org/docs/scrumguide/v2020/2020-Scrum-Guide-US.pdf#zoom=100\">https://www.scrumguides.org/docs/scrumguide/v2020/2020-Scrum-Guide-US.pdf#zoom=100</a></p>\n","protected":false},"excerpt":{"rendered":"<p>Today, organizations of every size are demanding a quicker (and better) response to change. So, what can leaders of churches, nonprofits, and schools do to increase organizational agility in the days ahead? </p>\n","protected":false},"author":2,"featured_media":2999,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"post-tag":[14],"_links":{"self":[{"href":"https://historicagency.com/wp-json/wp/v2/posts/2997"}],"collection":[{"href":"https://historicagency.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://historicagency.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/comments?post=2997"}],"version-history":[{"count":0,"href":"https://historicagency.com/wp-json/wp/v2/posts/2997/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/media/2999"}],"wp:attachment":[{"href":"https://historicagency.com/wp-json/wp/v2/media?parent=2997"}],"wp:term":[{"taxonomy":"post-tag","embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/post-tag?post=2997"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":2885,"date":"2021-01-19T07:00:00","date_gmt":"2021-01-19T14:00:00","guid":{"rendered":"https://historicagency.com/?p=2885"},"modified":"2021-01-12T13:06:52","modified_gmt":"2021-01-12T20:06:52","slug":"ask-the-expert-and-the-user-for-a-successful-launch","status":"publish","type":"post","link":"https://historicagency.com/ask-the-expert-and-the-user-for-a-successful-launch/","title":{"rendered":"Ask the Expert—and the User—for a Successful Launch"},"content":{"rendered":"\n<p>In-person meetings may be on hold for many, but the need for a Design Sprint is not! Whether you’re rolling out a new product, feature, or service, a Design Sprint can be just what you need to ensure your launch is successful.</p>\n\n\n\n<p>In <em>Sprint</em>, high-profile designers Jake Knapp and John Zeratsky outline their guide for executing an efficient Design Sprint, including an important step on Day 1 called “Ask the Expert.” The goal of this exercise is to pinpoint any potential problems early on and brainstorm innovative ways to resolve them.&nbsp;</p>\n\n\n\n<p>We love Ask the Expert for its ability to uncover important challenges and goals for new products!</p>\n\n\n\n<h2><strong>How does Ask the Expert work?</strong></h2>\n\n\n\n<p>The first day of a Design Sprint is typically devoted to uncovering the primary challenges your primary audience is facing. In the illuminating Ask the Expert exercise, we ask company experts questions about the unique challenges of their organization. These experts can include:</p>\n\n\n\n<ul><li>Sprint team members</li><li>CEOs</li><li>Marketing executives</li><li>Users&nbsp;</li></ul>\n\n\n\n<p>It’s helpful to gather a team of experts that covers a wide range of problems. When gathering your experts, never underestimate the importance of the user! Users can offer valuable insights into their experience with your product.&nbsp;</p>\n\n\n\n<p>Once you have your interviews lined up, keep in mind that the ideal interview length is between 15 and 30 minutes. Consider your long-term goals as you conduct interviews. Your questions should address the vision of the project, customer research, effectiveness of the product, and lessons learned from previous efforts.</p>\n\n\n\n<h2><strong>How can we make Ask the Expert work for us?</strong></h2>\n\n\n\n<p>One way to approach the Ask the Expert exercise is to envision yourself as a journalist or reporter. Be sure to cover the who, what, when, where, how of your project. Remind your team to take plenty of notes during the interview process—as any quality journalist would!&nbsp;</p>\n\n\n\n<p>Remember that it’s important to tailor this exercise to meet the specific needs and culture of your company. Consider some of the common pitfalls that other sprinters have experienced, and adjust as needed. Some designers have found:</p>\n\n\n\n<ul><li><strong>Timing is everything.</strong> Structure is important during this exercise. Try to map out a schedule that is realistic and generous in the amount of time it takes for each question to be answered. Though 15 to 30 minutes is ideal, adjust as needed—no expert can thoughtfully answer 20 questions in 20 minutes!</li></ul>\n\n\n\n<ul><li><strong>Taking turns is essential.</strong> Establish a recurring order in which interviewers ask their questions. This will help keep your team and guests from getting flustered or confused.</li></ul>\n\n\n\n<ul><li><strong>Make it fun. </strong>Setting this activity up in an old-fashioned panel style can be intimidating and stressful for the person being interviewed. Instead, consider creating a more intimate or laid-back interview set-up. This is often more comfortable for both the interviewers and interviewees!</li></ul>\n\n\n\n<p>The goal of Ask the Expert is to gain a sense of the state of the product and its future. Creating an open and collaborative environment is key to the success of the remainder of the sprint.&nbsp;</p>\n\n\n\n<h2><strong>How can we use information from the Ask the Expert exercise?</strong></h2>\n\n\n\n<p>Now that you’ve asked the right questions, what do you do with the answers? An effective way to use expert answers is to convert them into “How Might We” style questions. For example, if a user explains that they’re experiencing recurring technical issues, this information can be reformulated to the team as: “How might we improve the customer’s experience with the technology?”</p>\n\n\n\n<p>This helps reframe any challenges with the product as opportunities for growth. It also helps position the question within the context of long term goals.&nbsp;</p>\n\n\n\n<p>No matter how you decide to structure your version of Ask the Expert, remember that the goal is to improve your product before you launch it out into the world. Through compassionate, thoughtful questioning and innovative collaboration, this exercise is sure to help make your launch a success!</p>\n","protected":false},"excerpt":{"rendered":"<p>Whether you’re rolling out a new product, feature, or service, the &#8220;Ask the Expert&#8221; exercise can be just what you need to ensure your launch is successful.</p>\n","protected":false},"author":1,"featured_media":2899,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"post-tag":[14],"_links":{"self":[{"href":"https://historicagency.com/wp-json/wp/v2/posts/2885"}],"collection":[{"href":"https://historicagency.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://historicagency.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/comments?post=2885"}],"version-history":[{"count":0,"href":"https://historicagency.com/wp-json/wp/v2/posts/2885/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/media/2899"}],"wp:attachment":[{"href":"https://historicagency.com/wp-json/wp/v2/media?parent=2885"}],"wp:term":[{"taxonomy":"post-tag","embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/post-tag?post=2885"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":2877,"date":"2021-01-12T07:00:00","date_gmt":"2021-01-12T14:00:00","guid":{"rendered":"https://historicagency.com/?p=2877"},"modified":"2021-01-08T16:43:07","modified_gmt":"2021-01-08T23:43:07","slug":"empathy-is-your-best-design-tool","status":"publish","type":"post","link":"https://historicagency.com/empathy-is-your-best-design-tool/","title":{"rendered":"Empathy Is Your Best Design Tool"},"content":{"rendered":"\n<p>What defines “good” design? If you think about products that you love interacting with, chances are they share something in common: they’re all pretty intuitive to use. They seem to just “fit” you. They’re easy to navigate, using them feels natural and comfortable, and they fit right into your lifestyle.</p>\n\n\n\n<p>Great designers know that any successful product starts with a solid understanding of the user. In other words, good design starts off with empathy. Empathy can make all the difference between a great website or app, and one that people struggle to use.</p>\n\n\n\n<h2><strong>What does empathy really mean?</strong></h2>\n\n\n\n<p>Empathy can be defined as the ability to walk in someone else’s shoes—or to see the world through their eyes. It means feeling compassion for others’ struggles and caring for their needs.</p>\n\n\n\n<p>In design, empathy means understanding what users will want from your product. It means figuring out how they want to interact with your product, and understanding what they need the product to do.</p>\n\n\n\n<h2><strong>How can designers use empathy?</strong></h2>\n\n\n\n<p>The key to using empathy as a design tool is pretty straightforward. You’ll need to spend time really thinking about your audience.</p>\n\n\n\n<p>Who are you designing this product for? What characterizes your audience? What kind of product are they looking for? What motivates them?</p>\n\n\n\n<p>You’ll want to avoid thinking in terms of simple demographics. This is not a data-driven process, so you’re not just crunching numbers. Rather, you’re trying to really get into your audience’s shoes and figure out what they want and need from your product.</p>\n\n\n\n<h2><strong>Spend Time With Your Audience</strong></h2>\n\n\n\n<p>If you’re lucky, you’ll be able to actually meet with some of your users in person. But if you can’t, then reach out to people on internet forums. Read online reviews. Comb through social media. Do whatever you need to do—just be sure to invest the time so that you’re able to get a solid understanding of your customers.</p>\n\n\n\n<h2><strong>Make an Empathy Map</strong></h2>\n\n\n\n<p>Once you get a sense of who your audience is, build a map of what motivates them. An empathy map describes your users’ common thoughts, feelings, actions, and statements. It allows you to identify their pain points: What’s frustrating them? What are their major concerns?&nbsp;</p>\n\n\n\n<p>An empathy map also allows you to figure out their likely emotional response to your product. What kinds of things do they find irritating and confusing? What kinds of things make them feel happy and calm? Here’s a <a href=\"https://miro.com/templates/empathy-map/\">simple template</a> to get you started.</p>\n\n\n\n<h2><strong>Connecting the Dots</strong></h2>\n\n\n\n<p>Empathy is an ongoing act. It should begin with your design process and continue throughout your project. That’s because understanding what makes your audience tick will help you craft the perfect product for them—one that’s easy to use, offers superior accessibility, and fits their needs.</p>\n\n\n\n<p>Just as you begin the design process by getting to know your audience, you should continue to interact with your users as much as possible throughout the process. Seek out feedback once your product is complete. Figure out what works, and what could use improvement.&nbsp;</p>\n\n\n\n<p>Empathy is an ongoing process that will ultimately lead to great design—and happier users!</p>\n","protected":false},"excerpt":{"rendered":"<p>Great designers know that any successful product starts with a solid understanding of the user. Here are our tips for designing with empathy in mind.</p>\n","protected":false},"author":8,"featured_media":2882,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"post-tag":[14],"_links":{"self":[{"href":"https://historicagency.com/wp-json/wp/v2/posts/2877"}],"collection":[{"href":"https://historicagency.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://historicagency.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/users/8"}],"replies":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/comments?post=2877"}],"version-history":[{"count":0,"href":"https://historicagency.com/wp-json/wp/v2/posts/2877/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/media/2882"}],"wp:attachment":[{"href":"https://historicagency.com/wp-json/wp/v2/media?parent=2877"}],"wp:term":[{"taxonomy":"post-tag","embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/post-tag?post=2877"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":2859,"date":"2021-01-08T15:33:36","date_gmt":"2021-01-08T22:33:36","guid":{"rendered":"https://historicagency.com/?p=2859"},"modified":"2021-12-01T21:39:02","modified_gmt":"2021-12-02T04:39:02","slug":"8-tips-to-create-effective-online-surveys-to-test-ideas","status":"publish","type":"post","link":"https://historicagency.com/8-tips-to-create-effective-online-surveys-to-test-ideas/","title":{"rendered":"8 Tips to Create Effective Online Surveys to Test Ideas"},"content":{"rendered":"\n<p>Online surveys are a quick and effective way to get to know your customers and analyze their feedback. They’re easy to create, and when done right, can give you actionable insights into your audience’s needs. In other words, they help you help them.</p>\n\n\n\n<p>Creating an easy and intuitive survey for your customers can help you get the information you need to ensure your brand is providing the things your audience is looking for. The following eight steps will help you create an online survey that builds trust between you and your audience, gets you the data you’re looking for, and helps you improve your brand—leading to a positive experience for both you and those you serve!</p>\n\n\n\n<h2><strong>1. Keep it short.&nbsp;</strong></h2>\n\n\n\n<p>Your respondents are using their valuable time to provide you feedback, so be respectful of that time and use it well. Ensure that you ask the most relevant questions in the shortest amount of time. You’ll get the information you need, and users who take the survey won’t feel like their time was wasted.</p>\n\n\n\n<h2><strong>2. Ask open-ended questions.&nbsp;</strong></h2>\n\n\n\n<p>Open-ended questions encourage respondents to explain their ideas and feedback in a valuable way that can provide more information than a simple one-word answer. Just make sure to keep the questions logical and short enough to keep the user’s attention.</p>\n\n\n\n<h2><strong>3. Build a baseline.&nbsp;</strong></h2>\n\n\n\n<p>Ask the same questions in different forms regularly to create a baseline that you can use to better understand your customers. Having a clear baseline from the beginning allows you to measure data changes over time.</p>\n\n\n\n<h2><strong>4. Be clear and specific.&nbsp;</strong></h2>\n\n\n\n<p>Check your wording carefully so that there’s no room for misunderstanding or misinterpretations of any of the questions. Use clear language and a simple sentence structure that’s easy to read and follow. Avoid questions with too many sections that can lead to confusion. Accessibility is important; make the process easy for your end-user.</p>\n\n\n\n<h2><strong>5. Be honest and direct with your questions.&nbsp;</strong></h2>\n\n\n\n<p>Only ask questions that are relevant and will elicit targeted information. Building trust is an important component of any organization, and a survey is a great way to do that. Be careful to watch your wording and ensure you’re not implying your point of view in any way through subtle language. The best online surveys are unbiased and yield clear data.</p>\n\n\n\n<h2><strong>6. Ask specific “feeling” questions to test colors.</strong></h2>\n\n\n\n<p>Test colors for your brand or a specific project by asking users what emotions come up for them when they view different colors or sets of color combinations. Questions you could ask include: What colors come to mind when you think of this word? What emotions do you associate with these specific colors?&nbsp;</p>\n\n\n\n<p>This is an easy way to test out certain colors you’re considering, gauge the sorts of feelings they evoke, and determine whether those emotions fit in with whatever message you’re trying to get across.&nbsp;</p>\n\n\n\n<h2><strong>7. Ask questions about different phrases to test messaging.</strong></h2>\n\n\n\n<p>Asking questions about different words and phrases that people would connect with your brand is a great way to get feedback on general messaging and how your audience views who you are and what you do. One way to do this is by asking, “Which of the following words and phrases would you most associate with (org name)?” You can then include a selection of words below that they can select from.</p>\n\n\n\n<p>Additionally, if there’s a specific word in your brand name or tagline that you want to get feedback on, a great question to ask is, “What word(s) come to mind when you think of (specific word)?” This will help you gauge other thoughts or ideas that people associate with that specific word, and might help give you some ideas for other keywords you can use in your messaging.&nbsp;</p>\n\n\n\n<p>You can also have users list out which emotions they associate with a specific word, compare how well different phrases connect to your brand, rate how well a certain name fits into a specific narrative, or what products and services they align with a specific name.</p>\n\n\n\n<h2><strong>8. Present visuals and A/B tests to get UX feedback.</strong></h2>\n\n\n\n<p>If you’re trying to test the user interface for a website or app, presenting an A/B test side-by-side for the user in the survey can be a great way to get feedback on which design works best. Whether you’re wondering about layout, navigation, or ease of use, a survey can give you the answers you need to improve your design. This can be as simple as designing two different mock-ups with different layouts or structures and asking users to determine which design appeals to them most, contains the information they’re looking for, or what section they would click on or visit first.&nbsp;</p>\n\n\n\n<p>You can also include a single image of your site or app and ask specific questions about it, like:</p>\n\n\n\n<ul><li>What do you think this tool/website is for?</li><li>What would you click on to find (specific item)?</li><li>Would you know what to do on this specific page, or do you have questions?</li><li>Does this tool/website remind you of something else you use?</li><li>What would you change or add to this specific page?</li></ul>\n\n\n\n<p class=\"has-text-align-center\">&#8212;</p>\n\n\n\n<p>Online surveys don&#8217;t need to be daunting. Follow these eight steps to create an online survey that gets you the data you need as you test new ideas—and helps you build stronger relationships with your audience.</p>\n\n\n\n<p>And remember: If you’re unsure of something, testing it is more of a guide rather than a rule. You might not always get the answers you’re looking for, but it never hurts to ask!</p>\n","protected":false},"excerpt":{"rendered":"<p>Follow these steps to create an online survey that gets you the data you need and helps you build stronger relationships with your audience.</p>\n","protected":false},"author":14,"featured_media":2861,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"post-tag":[14],"_links":{"self":[{"href":"https://historicagency.com/wp-json/wp/v2/posts/2859"}],"collection":[{"href":"https://historicagency.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://historicagency.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/users/14"}],"replies":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/comments?post=2859"}],"version-history":[{"count":2,"href":"https://historicagency.com/wp-json/wp/v2/posts/2859/revisions"}],"predecessor-version":[{"id":3778,"href":"https://historicagency.com/wp-json/wp/v2/posts/2859/revisions/3778"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/media/2861"}],"wp:attachment":[{"href":"https://historicagency.com/wp-json/wp/v2/media?parent=2859"}],"wp:term":[{"taxonomy":"post-tag","embeddable":true,"href":"https://historicagency.com/wp-json/wp/v2/post-tag?post=2859"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}}]},"__N_SSG":true}